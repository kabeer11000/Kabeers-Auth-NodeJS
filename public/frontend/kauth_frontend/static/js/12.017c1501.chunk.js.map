{
  "version": 3,
  "sources": [
    "../node_modules/@material-ui/core/esm/utils/useForkRef.js",
    "../node_modules/@material-ui/core/esm/styles/useTheme.js",
    "../node_modules/@material-ui/core/esm/transitions/utils.js",
    "../node_modules/@material-ui/core/esm/utils/setRef.js",
    "../node_modules/react-transition-group/esm/TransitionGroupContext.js",
    "../node_modules/@material-ui/core/esm/CssBaseline/CssBaseline.js",
    "../node_modules/@material-ui/core/esm/Grow/Grow.js",
    "../node_modules/react-transition-group/esm/config.js",
    "../node_modules/react-transition-group/esm/Transition.js"
  ],
  "names": [
    "__webpack_require__",
    "d",
    "__webpack_exports__",
    "useForkRef",
    "react__WEBPACK_IMPORTED_MODULE_0__",
    "_setRef__WEBPACK_IMPORTED_MODULE_1__",
    "refA",
    "refB",
    "refValue",
    "Object",
    "useTheme",
    "_material_ui_styles__WEBPACK_IMPORTED_MODULE_0__",
    "_defaultTheme__WEBPACK_IMPORTED_MODULE_2__",
    "reflow",
    "getTransitionProps",
    "node",
    "scrollTop",
    "props",
    "options",
    "timeout",
    "_props$style",
    "style",
    "duration",
    "transitionDuration",
    "mode",
    "delay",
    "transitionDelay",
    "setRef",
    "ref",
    "value",
    "current",
    "react__WEBPACK_IMPORTED_MODULE_0___default",
    "n",
    "a",
    "createContext",
    "_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__",
    "react__WEBPACK_IMPORTED_MODULE_1__",
    "_styles_withStyles__WEBPACK_IMPORTED_MODULE_3__",
    "html",
    "WebkitFontSmoothing",
    "MozOsxFontSmoothing",
    "boxSizing",
    "body",
    "theme",
    "color",
    "palette",
    "text",
    "primary",
    "typography",
    "body2",
    "backgroundColor",
    "background",
    "default",
    "@media print",
    "common",
    "white",
    "@global",
    "*, *::before, *::after",
    "strong, b",
    "fontWeight",
    "fontWeightBold",
    "margin",
    "&::backdrop",
    "name",
    "_props$children",
    "children",
    "classes",
    "_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__",
    "_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__",
    "react__WEBPACK_IMPORTED_MODULE_3__",
    "react_transition_group__WEBPACK_IMPORTED_MODULE_5__",
    "_styles_useTheme__WEBPACK_IMPORTED_MODULE_6__",
    "_transitions_utils__WEBPACK_IMPORTED_MODULE_7__",
    "_utils_useForkRef__WEBPACK_IMPORTED_MODULE_8__",
    "getScale",
    "concat",
    "Math",
    "pow",
    "styles",
    "entering",
    "opacity",
    "transform",
    "entered",
    "Grow",
    "_props$disableStrictM",
    "disableStrictModeCompat",
    "inProp",
    "in",
    "onEnter",
    "onEntered",
    "onEntering",
    "onExit",
    "onExited",
    "onExiting",
    "_props$timeout",
    "_props$TransitionComp",
    "TransitionComponent",
    "other",
    "timer",
    "autoTimeout",
    "enableStrictModeCompat",
    "unstable_strictMode",
    "nodeRef",
    "foreignRef",
    "handleRef",
    "undefined",
    "normalizedTransitionCallback",
    "callback",
    "nodeOrAppearing",
    "maybeAppearing",
    "_ref",
    "_ref2",
    "isAppearing",
    "handleEntering",
    "handleEnter",
    "_getTransitionProps",
    "transitions",
    "getAutoHeightDuration",
    "clientHeight",
    "transition",
    "create",
    "join",
    "handleEntered",
    "handleExiting",
    "handleExit",
    "_getTransitionProps2",
    "handleExited",
    "clearTimeout",
    "appear",
    "addEndListener",
    "nodeOrNext",
    "maybeNext",
    "next",
    "setTimeout",
    "state",
    "childProps",
    "visibility",
    "muiSupportAuto",
    "config",
    "UNMOUNTED",
    "EXITED",
    "ENTERING",
    "ENTERED",
    "Transition_Transition",
    "_React$Component",
    "Transition",
    "context",
    "_this",
    "call",
    "this",
    "initialStatus",
    "isMounting",
    "enter",
    "appearStatus",
    "unmountOnExit",
    "mountOnEnter",
    "status",
    "nextCallback",
    "inheritsLoose",
    "getDerivedStateFromProps",
    "prevState",
    "_proto",
    "prototype",
    "componentDidMount",
    "updateStatus",
    "componentDidUpdate",
    "prevProps",
    "nextStatus",
    "componentWillUnmount",
    "cancelNextCallback",
    "getTimeouts",
    "exit",
    "mounting",
    "performEnter",
    "performExit",
    "setState",
    "_this2",
    "appearing",
    "react_dom_default",
    "findDOMNode",
    "maybeNode",
    "timeouts",
    "enterTimeout",
    "safeSetState",
    "onTransitionEnd",
    "_this3",
    "cancel",
    "nextState",
    "setNextCallback",
    "_this4",
    "active",
    "event",
    "handler",
    "doesNotHaveTimeoutOrListener",
    "_ref3",
    "maybeNextCallback",
    "render",
    "_this$props",
    "objectWithoutPropertiesLoose",
    "react_default",
    "createElement",
    "TransitionGroupContext",
    "Provider",
    "cloneElement",
    "Children",
    "only",
    "Component",
    "noop",
    "contextType",
    "propTypes",
    "defaultProps",
    "EXITING"
  ],
  "mappings": "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",
  "file": "static/js/12.017c1501.chunk.js",
  "sourcesContent": [
    "import * as React from 'react';\nimport setRef from './setRef';\nexport default function useForkRef(refA, refB) {\n  /**\n   * This will create a new function if the ref props change and are defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior\n   */\n  return React.useMemo(function () {\n    if (refA == null && refB == null) {\n      return null;\n    }\n\n    return function (refValue) {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}",
    "import { useTheme as useThemeWithoutDefault } from '@material-ui/styles';\nimport React from 'react';\nimport defaultTheme from './defaultTheme';\nexport default function useTheme() {\n  var theme = useThemeWithoutDefault() || defaultTheme;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n\n  return theme;\n}",
    "export var reflow = function reflow(node) {\n  return node.scrollTop;\n};\nexport function getTransitionProps(props, options) {\n  var timeout = props.timeout,\n      _props$style = props.style,\n      style = _props$style === void 0 ? {} : _props$style;\n  return {\n    duration: style.transitionDuration || typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,\n    delay: style.transitionDelay\n  };\n}",
    "// TODO v5: consider to make it private\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}",
    "import React from 'react';\nexport default React.createContext(null);",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { exactProp } from '@material-ui/utils';\nexport var html = {\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box'\n};\nexport var body = function body(theme) {\n  return _extends({\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    backgroundColor: theme.palette.background.default,\n    '@media print': {\n      // Save printer ink.\n      backgroundColor: theme.palette.common.white\n    }\n  });\n};\nexport var styles = function styles(theme) {\n  return {\n    '@global': {\n      html: html,\n      '*, *::before, *::after': {\n        boxSizing: 'inherit'\n      },\n      'strong, b': {\n        fontWeight: theme.typography.fontWeightBold\n      },\n      body: _extends({\n        margin: 0\n      }, body(theme), {\n        // Add support for document.body.requestFullScreen().\n        // Other elements, if background transparent, are not supported.\n        '&::backdrop': {\n          backgroundColor: theme.palette.background.default\n        }\n      })\n    }\n  };\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(props) {\n  /* eslint-disable no-unused-vars */\n  var _props$children = props.children,\n      children = _props$children === void 0 ? null : _props$children,\n      classes = props.classes;\n  /* eslint-enable no-unused-vars */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\n\nexport default withStyles(styles, {\n  name: 'MuiCssBaseline'\n})(CssBaseline);",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport useTheme from '../styles/useTheme';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\n\nfunction getScale(value) {\n  return \"scale(\".concat(value, \", \").concat(Math.pow(value, 2), \")\");\n}\n\nvar styles = {\n  entering: {\n    opacity: 1,\n    transform: getScale(1)\n  },\n  entered: {\n    opacity: 1,\n    transform: 'none'\n  }\n};\n/**\n * The Grow transition is used by the [Tooltip](/components/tooltips/) and\n * [Popover](/components/popover/) components.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Grow = /*#__PURE__*/React.forwardRef(function Grow(props, ref) {\n  var children = props.children,\n      _props$disableStrictM = props.disableStrictModeCompat,\n      disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? 'auto' : _props$timeout,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp,\n      other = _objectWithoutProperties(props, [\"children\", \"disableStrictModeCompat\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  var timer = React.useRef();\n  var autoTimeout = React.useRef();\n  var theme = useTheme();\n  var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;\n  var nodeRef = React.useRef(null);\n  var foreignRef = useForkRef(children.ref, ref);\n  var handleRef = useForkRef(enableStrictModeCompat ? nodeRef : undefined, foreignRef);\n\n  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {\n    return function (nodeOrAppearing, maybeAppearing) {\n      if (callback) {\n        var _ref = enableStrictModeCompat ? [nodeRef.current, nodeOrAppearing] : [nodeOrAppearing, maybeAppearing],\n            _ref2 = _slicedToArray(_ref, 2),\n            node = _ref2[0],\n            isAppearing = _ref2[1]; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n\n        if (isAppearing === undefined) {\n          callback(node);\n        } else {\n          callback(node, isAppearing);\n        }\n      }\n    };\n  };\n\n  var handleEntering = normalizedTransitionCallback(onEntering);\n  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {\n    reflow(node); // So the animation always start from the start.\n\n    var _getTransitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    }),\n        transitionDuration = _getTransitionProps.duration,\n        delay = _getTransitionProps.delay;\n\n    var duration;\n\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration: duration,\n      delay: delay\n    }), theme.transitions.create('transform', {\n      duration: duration * 0.666,\n      delay: delay\n    })].join(',');\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  var handleEntered = normalizedTransitionCallback(onEntered);\n  var handleExiting = normalizedTransitionCallback(onExiting);\n  var handleExit = normalizedTransitionCallback(function (node) {\n    var _getTransitionProps2 = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    }),\n        transitionDuration = _getTransitionProps2.duration,\n        delay = _getTransitionProps2.delay;\n\n    var duration;\n\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration: duration,\n      delay: delay\n    }), theme.transitions.create('transform', {\n      duration: duration * 0.666,\n      delay: delay || duration * 0.333\n    })].join(',');\n    node.style.opacity = '0';\n    node.style.transform = getScale(0.75);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  var handleExited = normalizedTransitionCallback(onExited);\n\n  var addEndListener = function addEndListener(nodeOrNext, maybeNext) {\n    var next = enableStrictModeCompat ? nodeOrNext : maybeNext;\n\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTimeout.current || 0);\n    }\n  };\n\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: inProp,\n    nodeRef: enableStrictModeCompat ? nodeRef : undefined,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      style: _extends({\n        opacity: 0,\n        transform: getScale(0.75),\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, styles[state], style, children.props.style),\n      ref: handleRef\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Enable this prop if you encounter 'Function components cannot be given refs',\n   * use `unstable_createStrictModeTheme`,\n   * and can't forward the ref in the child component.\n   */\n  disableStrictModeCompat: PropTypes.bool,\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nGrow.muiSupportAuto = true;\nexport default Grow;",
    "export default {\n  disabled: false\n};",
    "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : PropTypes.instanceOf(Element)\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;"
  ],
  "sourceRoot": ""
}
