{
  "version": 3,
  "sources": [
    "components/AccountChooser/AccountChooser.js",
    "../node_modules/@material-ui/icons/esm/utils/createSvgIcon.js",
    "../node_modules/@material-ui/core/esm/Button/Button.js",
    "../node_modules/@material-ui/icons/esm/LockOutlined.js"
  ],
  "names": [
    "useStyles",
    "makeStyles",
    "theme",
    "root",
    "width",
    "maxWidth",
    "minWidth",
    "backgroundColor",
    "palette",
    "background",
    "paper",
    "avatar",
    "margin",
    "spacing",
    "secondary",
    "main",
    "inline",
    "display",
    "marginTop",
    "flexDirection",
    "alignItems",
    "alignCenter",
    "backdrop",
    "zIndex",
    "drawer",
    "color",
    "AccountChooser",
    "props",
    "Accounts",
    "localStorage",
    "getItem",
    "JSON",
    "parse",
    "classes",
    "mainElement",
    "document",
    "getElementById",
    "AppData",
    "appName",
    "getAttribute",
    "Error",
    "_React$useState",
    "React",
    "useState",
    "_React$useState2",
    "Object",
    "E_Projects_phpstormprojects_kauth_new_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__",
    "open",
    "setOpen",
    "LoginHelper",
    "account",
    "ChooserLoginTest",
    "then",
    "res",
    "json",
    "value",
    "AddToAccounts",
    "setAttribute",
    "btoa",
    "stringify",
    "callNext",
    "catch",
    "e",
    "react__WEBPACK_IMPORTED_MODULE_2___default",
    "a",
    "createElement",
    "_material_ui_core_Grow__WEBPACK_IMPORTED_MODULE_21__",
    "in",
    "className",
    "_material_ui_core_Backdrop__WEBPACK_IMPORTED_MODULE_19__",
    "_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_20__",
    "_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_12__",
    "component",
    "_material_ui_core_CssBaseline__WEBPACK_IMPORTED_MODULE_13__",
    "_material_ui_core_Card__WEBPACK_IMPORTED_MODULE_16__",
    "_material_ui_core_CardContent__WEBPACK_IMPORTED_MODULE_17__",
    "_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_7__",
    "_material_ui_icons__WEBPACK_IMPORTED_MODULE_14__",
    "_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_10__",
    "variant",
    "_material_ui_core_List__WEBPACK_IMPORTED_MODULE_4__",
    "map",
    "index",
    "Fragment",
    "key",
    "_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_5__",
    "style",
    "button",
    "onClick",
    "E_Projects_phpstormprojects_kauth_new_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__",
    "password",
    "atob",
    "_material_ui_core_ListItemAvatar__WEBPACK_IMPORTED_MODULE_8__",
    "alt",
    "username",
    "src",
    "account_image",
    "_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_9__",
    "primary",
    "email",
    "_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_6__",
    "_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_18__",
    "window",
    "location",
    "href",
    "UpdateQueryStringParam",
    "defaultProps",
    "__webpack_require__",
    "d",
    "__webpack_exports__",
    "createSvgIcon",
    "_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__",
    "react__WEBPACK_IMPORTED_MODULE_1__",
    "react__WEBPACK_IMPORTED_MODULE_1___default",
    "n",
    "_material_ui_core_SvgIcon__WEBPACK_IMPORTED_MODULE_2__",
    "path",
    "displayName",
    "Component",
    "memo",
    "forwardRef",
    "ref",
    "muiName",
    "_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__",
    "_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__",
    "react__WEBPACK_IMPORTED_MODULE_2__",
    "clsx__WEBPACK_IMPORTED_MODULE_4__",
    "_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__",
    "_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__",
    "_ButtonBase__WEBPACK_IMPORTED_MODULE_7__",
    "_utils_capitalize__WEBPACK_IMPORTED_MODULE_8__",
    "Button",
    "children",
    "_props$color",
    "_props$component",
    "_props$disabled",
    "disabled",
    "_props$disableElevati",
    "disableElevation",
    "_props$disableFocusRi",
    "disableFocusRipple",
    "endIconProp",
    "endIcon",
    "focusVisibleClassName",
    "_props$fullWidth",
    "fullWidth",
    "_props$size",
    "size",
    "startIconProp",
    "startIcon",
    "_props$type",
    "type",
    "_props$variant",
    "other",
    "concat",
    "colorInherit",
    "focusRipple",
    "focusVisible",
    "label",
    "typography",
    "boxSizing",
    "padding",
    "borderRadius",
    "shape",
    "text",
    "transition",
    "transitions",
    "create",
    "duration",
    "short",
    "&:hover",
    "textDecoration",
    "action",
    "hoverOpacity",
    "@media (hover: none)",
    "&$disabled",
    "justifyContent",
    "textPrimary",
    "textSecondary",
    "outlined",
    "border",
    "disabledBackground",
    "outlinedPrimary",
    "outlinedSecondary",
    "contained",
    "getContrastText",
    "grey",
    "boxShadow",
    "shadows",
    "A100",
    "&$focusVisible",
    "&:active",
    "containedPrimary",
    "contrastText",
    "dark",
    "containedSecondary",
    "borderColor",
    "textSizeSmall",
    "fontSize",
    "pxToRem",
    "textSizeLarge",
    "outlinedSizeSmall",
    "outlinedSizeLarge",
    "containedSizeSmall",
    "containedSizeLarge",
    "sizeSmall",
    "sizeLarge",
    "marginRight",
    "marginLeft",
    "&$iconSizeSmall",
    "iconSizeSmall",
    "& > *:first-child",
    "iconSizeMedium",
    "iconSizeLarge",
    "name",
    "react__WEBPACK_IMPORTED_MODULE_0__",
    "react__WEBPACK_IMPORTED_MODULE_0___default",
    "_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__"
  ],
  "mappings": "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",
  "file": "static/js/14.b61f67e0.chunk.js",
  "sourcesContent": [
    "import React from 'react';\nimport './AccountChooser.css';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {LockOutlined} from \"@material-ui/icons\";\nimport {ChooserLoginTest} from \"../../functions/Login/Login\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from 'prop-types';\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grow from \"@material-ui/core/Grow\";\nimport {AddToAccounts} from \"../../functions/Login/AddToAccounts\";\nimport {UpdateQueryStringParam} from \"../../functions/Misc/Misc\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '50ch',\n        minWidth: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    inline: {\n        display: 'inline',\n    },\n    main: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    alignCenter: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        minWidth: '100%',\n        width: '100%'\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\nconst AccountChooser = (props) => {\n    const Accounts = localStorage.getItem('accounts') === null ? null : JSON.parse(localStorage.getItem('accounts'));\n    const classes = useStyles();\n    const mainElement = document.getElementById('DataContainer');\n    const AppData = {\n        appName: mainElement.getAttribute('appName'),\n    };\n    if (!mainElement) return new Error('Main Element Not Defined');\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleToggle = () => {\n        setOpen(!open);\n    };\n    const LoginHelper = (account) => {\n        handleToggle();\n        ChooserLoginTest(account).then(res => res.json())\n            .then(value => {\n                if (value !== 'Nothing Found') AddToAccounts(value).then(() => {\n                    mainElement.setAttribute('choosenAccount', btoa(JSON.stringify(account)));\n                    props.callNext()\n                });\n            })\n            .catch(e => {\n                //mainElement.setAttribute('choosenAccount', 'sex');\n                //props.callNext()\n            });\n    };\n\n    return (\n        <Grow in={true}>\n\n            <div className={`AccountChooser`}>\n                <Backdrop className={classes.backdrop} open={open}>\n                    <CircularProgress color=\"inherit\"/>\n                </Backdrop>\n                <Container component=\"main\" className={'mt-5 pt-2 pb-2'} maxWidth=\"xs\">\n                    <CssBaseline/>\n                    <Card className={classes.main}>\n                        <CardContent className={classes.alignCenter}>\n                            <Avatar className={classes.avatar}>\n                                <LockOutlined/>\n                            </Avatar>\n                            <Typography component=\"h1\" variant=\"h5\">\n                                Choose An Account\n                            </Typography>\n                            <Typography variant={\"overline\"} className={\"text-center\"}>\n                                Continue to\n                                <Typography className={\"ml-1\"} variant={\"overline\"} color={\"secondary\"}>\n                                    {AppData.appName}\n                                </Typography>\n                            </Typography>\n                            <List className={classes.root}>\n                                {\n                                    Accounts.map((account, index) => (\n                                        <React.Fragment key={index}>\n                                            <ListItem style={{minWidth: '100%'}} button alignItems=\"flex-start\"\n                                                      onClick={() => LoginHelper({...account, password: atob(account.password)})}>\n                                                <ListItemAvatar>\n                                                    <Avatar alt={account.username} src={account.account_image}/>\n                                                </ListItemAvatar>\n                                                <ListItemText\n                                                    primary={account.username}\n                                                    secondary={account.email}\n                                                />\n                                            </ListItem>\n                                            <Divider variant=\"inset\" component=\"li\"/>\n                                        </React.Fragment>\n                                    ))\n                                }\n                                <ListItem alignItems=\"center\" className={\"text-center mt-2\"}>\n                                    <ListItemText\n                                        primary={\n                                            <React.Fragment>\n                                                <Button className={\"w-100\"} onClick={()=>window.location.href=UpdateQueryStringParam(window.location.href,'prompt', 'password')}>\n                                                    Add New Account\n                                                </Button>\n                                            </React.Fragment>\n                                        }\n                                    />\n                                </ListItem>\n                            </List>\n                        </CardContent>\n                    </Card>\n                </Container>\n            </div>\n        </Grow>\n    );\n};\n\nAccountChooser.propTypes = {\n    handleNext: PropTypes.func,\n    handleBack: PropTypes.func,\n};\n\nAccountChooser.defaultProps = {};\n\nexport default AccountChooser;\n",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}",
    "import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);",
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');"
  ],
  "sourceRoot": ""
}
