{
  "version": 3,
  "sources": [
    "components/OauthAppComponent/OauthAppDetails.js",
    "components/OauthAppComponent/OauthAppComponent.js"
  ],
  "names": [
    "Transition",
    "React",
    "forwardRef",
    "props",
    "ref",
    "react_default",
    "a",
    "createElement",
    "Slide",
    "Object",
    "assign",
    "direction",
    "makeStyles",
    "theme",
    "root",
    "width",
    "maxWidth",
    "backgroundColor",
    "palette",
    "background",
    "paper",
    "maxHeight",
    "OauthAppDetailsRaw",
    "onClose",
    "valueProp",
    "value",
    "open",
    "other",
    "objectWithoutProperties",
    "_React$useState",
    "useState",
    "_React$useState2",
    "slicedToArray",
    "setValue",
    "radioGroupRef",
    "useRef",
    "useEffect",
    "useTheme",
    "fullScreen",
    "useMediaQuery",
    "breakpoints",
    "down",
    "handleCancel",
    "mainData",
    "data",
    "find",
    "app",
    "appId",
    "Cookies",
    "get",
    "JSON",
    "parse",
    "Fragment",
    "Dialog",
    "keepMounted",
    "onEntering",
    "current",
    "focus",
    "aria-labelledby",
    "TransitionComponent",
    "AppBar",
    "position",
    "Toolbar",
    "IconButton",
    "onClick",
    "edge",
    "color",
    "aria-label",
    "ArrowBack",
    "Typography",
    "variant",
    "appName",
    "className",
    "Avatar",
    "src",
    "icon",
    "alt",
    "DialogContent",
    "DialogContentText",
    "perms",
    "map",
    "index",
    "ListItem",
    "button",
    "ListItemAvatar",
    "title",
    "ListItemText",
    "primary",
    "Divider",
    "DialogActions",
    "Button",
    "autoFocus",
    "useStyles",
    "OauthAppComponent",
    "apps",
    "setApps",
    "_React$useState3",
    "_React$useState4",
    "setOpen",
    "_React$useState5",
    "_React$useState6",
    "setAppId",
    "classes",
    "fetch",
    "endPoints",
    "getUserApps",
    "method",
    "headers",
    "Headers",
    "default_account",
    "then",
    "res",
    "json",
    "auth_apps",
    "catch",
    "e",
    "alert",
    "stringify",
    "OauthAppDetails",
    "id",
    "newValue",
    "Container",
    "Card",
    "List",
    "key",
    "ArrowForward",
    "defaultProps"
  ],
  "mappings": "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",
  "file": "static/js/19.12e74add.chunk.js",
  "sourcesContent": [
    "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {Divider} from \"@material-ui/core\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {ArrowBack} from \"@material-ui/icons\";\r\nimport {endPoints} from \"../../api/endPoints\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst options = [\r\n    'None',\r\n    'Atria',\r\n    'Callisto',\r\n    'Dione',\r\n    'Ganymede',\r\n    'Hangouts Call',\r\n    'Luna',\r\n    'Oberon',\r\n    'Phobos',\r\n    'Pyxis',\r\n    'Sedna',\r\n    'Titania',\r\n    'Triton',\r\n    'Umbriel',\r\n];\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction OauthAppDetailsRaw(props) {\r\n    const {onClose, value: valueProp, open, ...other} = props;\r\n    const [value, setValue] = React.useState(valueProp);\r\n    const radioGroupRef = React.useRef(null);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setValue(valueProp);\r\n        }\r\n    }, [valueProp, open]);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const handleEntering = () => {\r\n        if (radioGroupRef.current != null) {\r\n            radioGroupRef.current.focus();\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        onClose();\r\n    };\r\n\r\n    const handleOk = () => {\r\n        onClose(value);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n    const mainData = props.data.find(app => app.appId === props.appId);\r\n    const AppData = {\r\n        account: Cookies.get('default_account') ? JSON.parse(Cookies.get('default_account')) : null,\r\n    };\r\n    const handleAppRemove = () => {\r\n      fetch(endPoints.removeOauthApp, {\r\n          method: 'POST',\r\n          headers: new Headers({\r\n              'default_account': AppData.account,\r\n              'app_id': mainData.appId\r\n          })\r\n      }).then(handleCancel)\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            {open && props.data && mainData ? (\r\n                <Dialog\r\n                    keepMounted\r\n                    fullScreen={fullScreen}\r\n                    open={open}\r\n                    onClose={handleCancel}\r\n                    onEntering={handleEntering}\r\n                    aria-labelledby=\"responsive-dialog-title\"\r\n                    TransitionComponent={Transition}\r\n                    {...other}\r\n                    maxWidth=\"xs\"\r\n                >\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar>\r\n                            <IconButton onClick={handleCancel} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                                <ArrowBack/>\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\">\r\n                                {mainData.appName}\r\n                            </Typography>\r\n                            <div className={'flexGrow'}/>\r\n                            <Avatar src={mainData.icon} alt={mainData.appName} variant={\"rounded\"}/>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {\r\n                                props.data ? (\r\n                                    props.data.find(app => app.appId === props.appId).perms.map((app, index) => (\r\n                                        <React.Fragment>\r\n                                            <ListItem button>\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar src={app.icon} alt={app.title}/>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText primary={app.title}/>\r\n                                            </ListItem>\r\n                                            <Divider variant={\"inset\"}/>\r\n                                        </React.Fragment>\r\n                                    ))) : null\r\n                            }\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleCancel} color=\"primary\" autoFocus>\r\n                            Remove\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>) : null}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nOauthAppDetailsRaw.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    data: PropTypes.array.isRequired,\r\n    appId: PropTypes.string.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    paper: {\r\n        width: '80%',\r\n        maxHeight: 435,\r\n    },\r\n}));\r\nexport default OauthAppDetailsRaw;\r\n/*\r\nexport default function OauthAppDetails() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [value, setValue] = React.useState('Dione');\r\n\r\n    const handleClickListItem = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (newValue) => {\r\n        setOpen(false);\r\n\r\n        if (newValue) {\r\n            setValue(newValue);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <List component=\"div\" role=\"list\">\r\n                <ListItem button divider disabled role=\"listitem\">\r\n                    <ListItemText primary=\"Interruptions\" />\r\n                </ListItem>\r\n                <ListItem\r\n                    button\r\n                    divider\r\n                    aria-haspopup=\"true\"\r\n                    aria-controls=\"ringtone-menu\"\r\n                    aria-label=\"phone ringtone\"\r\n                    onClick={handleClickListItem}\r\n                    role=\"listitem\"\r\n                >\r\n                    <ListItemText primary=\"Phone ringtone\" secondary={value} />\r\n                </ListItem>\r\n                <ListItem button divider disabled role=\"listitem\">\r\n                    <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n                </ListItem>\r\n                <OauthAppDetailsRaw\r\n                    classes={{\r\n                        paper: classes.paper,\r\n                    }}\r\n                    id=\"ringtone-menu\"\r\n                    keepMounted\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    value={value}\r\n                />\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\nOauthAppDetails.propTypes = {};\r\n\r\nOauthAppDetails.defaultProps = {};\r\n\r\nexport default OauthAppDetails;\r\n*/\r\n",
    "import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport './OauthAppComponent.css';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport WorkIcon from '@material-ui/icons/Work';\nimport {ArrowForward, BeachAccess, ExpandMore} from \"@material-ui/icons\";\nimport {endPoints} from \"../../api/endPoints\";\nimport Cookies from \"js-cookie\";\nimport {Divider} from \"@material-ui/core\";\nimport OauthAppDetailsRaw from \"./OauthAppDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\nconst OauthAppComponent = () => {\n    const [apps, setApps] = React.useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [appId, setAppId] = React.useState('');\n\n    const handleClickListItem = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (newValue) => {\n        setOpen(false);\n\n        if (newValue) {\n            //setValue(newValue);\n        }\n    };\n\n    const classes = useStyles();\n    useEffect(() => {\n        fetch(endPoints.getUserApps, {\n            method: 'POST',\n            headers: new Headers({\n                \"default_account\": Cookies.get(\"default_account\")\n            })\n        })\n            .then(res => res.json())\n            .then(auth_apps => setApps(auth_apps))\n            .catch(e => alert(JSON.stringify(e)))\n    }, []);\n    return (\n        <div className=\"OauthAppComponent\">\n            <OauthAppDetailsRaw\n                classes={{\n                    paper: classes.paper,\n                }}\n                id=\"ringtone-menu\"\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                appId={appId}\n                data={apps}\n            />\n\n            <div className={'a'}>\n                <Container className={\"mt-5 mb-4\"} maxWidth={\"xs\"}>\n                    <Typography variant={\"h3\"}>\n                        Apps\n                    </Typography>\n                    <Typography variant={\"caption\"}>\n                        Apps Connected to Your Account.\n                        OAuth2.0 apps you have signed up with your account\n                    </Typography>\n                </Container>\n                <Container maxWidth={\"xs\"}>\n                    <Card>\n                        <List className={classes.root}>\n                            {\n                                apps ? (\n                                    apps.map((app, index) => (\n                                        <React.Fragment>\n                                            <ListItem key={index} button\n                                                      onClick={() => (setAppId(app.appId), handleClickListItem())}>\n                                                <ListItemAvatar>\n                                                    <Avatar src={app.icon} alt={app.appName}/>\n                                                </ListItemAvatar>\n                                                <ListItemText primary={app.appName}/>\n                                                <ArrowForward/>\n                                            </ListItem>\n                                        </React.Fragment>\n                                    ))\n                                ) : null\n                            }\n                        </List>\n                    </Card>\n                </Container>\n            </div>\n        </div>\n    );\n};\n\nOauthAppComponent.propTypes = {};\n\nOauthAppComponent.defaultProps = {};\n\nexport default OauthAppComponent;\n"
  ],
  "sourceRoot": ""
}
