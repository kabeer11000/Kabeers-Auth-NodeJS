{
  "version": 3,
  "sources": [
    "../node_modules/@material-ui/core/esm/CardActions/CardActions.js",
    "components/PermessionsScreen/PermessionsScreen.js"
  ],
  "names": [
    "CardActions_CardActions",
    "react",
    "props",
    "ref",
    "_props$disableSpacing",
    "disableSpacing",
    "classes",
    "className",
    "other",
    "Object",
    "objectWithoutProperties",
    "esm_extends",
    "clsx_m",
    "root",
    "spacing",
    "esm_CardActions_CardActions",
    "withStyles",
    "display",
    "alignItems",
    "padding",
    "& > :not(:first-child)",
    "marginLeft",
    "name",
    "useStyles",
    "makeStyles",
    "theme",
    "width",
    "maxWidth",
    "minWidth",
    "backgroundColor",
    "palette",
    "background",
    "paper",
    "avatar",
    "margin",
    "secondary",
    "main",
    "inline",
    "marginTop",
    "flexDirection",
    "alignCenter",
    "backdrop",
    "zIndex",
    "drawer",
    "color",
    "PermessionsScreen",
    "abortController",
    "AbortController",
    "mainElement",
    "document",
    "getElementById",
    "AppData",
    "appName",
    "getAttribute",
    "appIcon",
    "appPerms",
    "JSON",
    "parse",
    "atob",
    "choosenAccount",
    "Error",
    "_React$useState",
    "React",
    "useState",
    "_React$useState2",
    "slicedToArray",
    "open",
    "setOpen",
    "useEffect",
    "abort",
    "title",
    "concat",
    "MainElement",
    "react_default",
    "a",
    "createElement",
    "Grow",
    "in",
    "addEndListener",
    "Backdrop",
    "CircularProgress",
    "Container",
    "component",
    "CssBaseline",
    "Card",
    "CardContent",
    "Avatar",
    "src",
    "Typography",
    "variant",
    "style",
    "height",
    "marginRight",
    "alt",
    "username",
    "account_image",
    "email",
    "List",
    "map",
    "perm",
    "index",
    "Fragment",
    "key",
    "ListItem",
    "button",
    "ListItemAvatar",
    "image",
    "ListItemText",
    "primary",
    "desc",
    "Divider",
    "Button",
    "onClick",
    "Login",
    "then",
    "value",
    "console",
    "log",
    "catch",
    "e",
    "defaultProps",
    "pure"
  ],
  "mappings": "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",
  "file": "static/js/20.06daee65.chunk.js",
  "sourcesContent": [
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);",
    "import React, {useEffect} from 'react';\nimport './PermessionsScreen.css';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {pure} from \"recompose\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport {Login} from \"../../functions/Login/Login\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grow from \"@material-ui/core/Grow\";\nimport {MainElement} from \"../../functions/Misc/Misc\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '50ch',\n        minWidth: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    inline: {\n        display: 'inline',\n    },\n    main: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    alignCenter: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        minWidth: '100%',\n        width: '100%'\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\nconst PermessionsScreen = () => {\n    const classes = useStyles();\n    const abortController = new AbortController();\n    const mainElement = document.getElementById('DataContainer');\n    const AppData = {\n        appName: mainElement.getAttribute('appName'),\n        appIcon: mainElement.getAttribute('appIcon'),\n        appPerms: JSON.parse(atob(mainElement.getAttribute('appPerms'))),\n        choosenAccount: JSON.parse(atob(mainElement.getAttribute('choosenAccount'))),\n    };\n    if (!mainElement) return new Error('Main Element Not Defined');\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleToggle = () => {\n        setOpen(!open);\n    };\n    const LoginHelper = () => {\n        handleToggle();\n        Login(AppData.choosenAccount)\n            .then(value => console.log(value))\n            .catch(e => setOpen(false));\n    };\n    useEffect(() => {\n        return () => abortController.abort()\n    }, []);\n    document.title = `Allow ${MainElement.getAttribute('appName')} to access your data`;\n\n    return (\n        <Grow in={true} addEndListener={()=>{}}>\n            <div className=\"PermessionsScreen\">\n                <Backdrop className={classes.backdrop} open={open}>\n                    <CircularProgress color=\"inherit\"/>\n                </Backdrop>\n                <Container component=\"main\" maxWidth=\"xs\" className={'mt-5 pt-2 pb-2'}>\n                    <CssBaseline/>\n                    <Card className={classes.main}>\n                        <CardContent className={classes.alignCenter}>\n                            <Avatar src={AppData.appIcon} className={classes.avatar}/>\n                            <Typography className={'text-center'}>\n                                <Typography component={\"span\"} className={\"mr-1\"} color={\"secondary\"}>\n                                    {AppData.appName}\n                                </Typography>\n                                wants Access to Your Account\n                                <br/>\n                                <Typography variant={\"caption\"} className={'d-inline-flex'}>\n                                    <Avatar style={{width: '1rem', height: '1rem', marginRight: '0.5rem'}}\n                                            alt={AppData.choosenAccount.username}\n                                            src={AppData.choosenAccount.account_image}/>\n                                    {AppData.choosenAccount.email}\n                                </Typography>\n                            </Typography>\n                            <Typography variant={\"overline\"} component={'div'} className={\"text-left mt-3\"}>\n                                This allows\n                                <Typography className={\"ml-1\"} variant={\"overline\"} color={\"secondary\"}>\n                                    {AppData.appName}\n                                </Typography> To:\n                            </Typography>\n                            <List className={`${classes.root} mt-3`}>\n                                {\n                                    AppData.appPerms.map((perm, index) => (\n                                        <React.Fragment key={index}>\n                                            <ListItem style={{minWidth: '100%'}} button alignItems=\"flex-start\">\n                                                <ListItemAvatar>\n                                                    <Avatar alt={perm.title} src={perm.image}\n                                                            style={{width: '2rem', height: '2rem'}}\n                                                            className={'bg-light'} variant={\"rounded\"}/>\n                                                </ListItemAvatar>\n                                                <ListItemText\n                                                    primary={`${perm.desc}`}\n                                                    secondary={perm.title}\n                                                />\n                                            </ListItem>\n                                            <Divider variant=\"inset\" component=\"li\"/>\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </List>\n                            <div className={\"TrustComponent mt-3 px-2\"}>\n                                <Typography variant={\"button\"}>\n                                    Make sure you trust {AppData.appName}\n                                </Typography>\n                                <Typography variant={\"body2\"}>\n                                    You may be sharing sensitive info with this site or app. Learn about\n                                    how {AppData.appName} will handle your data by reviewing its terms of service\n                                    and\n                                    privacy policies. You can always see or remove access in your Kabeers Network\n                                    Account.\n                                </Typography>\n                            </div>\n                        </CardContent>\n                        <CardActions className={'mb-5'}>\n                            <Button\n                                color=\"secondary\"\n                                className={'mx-2'}\n                            >\n                                Cancel\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={'mx-2'}\n                                onClick={LoginHelper}\n                            >\n                                Allow\n                            </Button>\n                        </CardActions>\n                    </Card>\n                </Container>\n            </div>\n        </Grow>\n    );\n};\n\nPermessionsScreen.propTypes = {};\n\nPermessionsScreen.defaultProps = {};\n\nexport default pure(PermessionsScreen);\n"
  ],
  "sourceRoot": ""
}
