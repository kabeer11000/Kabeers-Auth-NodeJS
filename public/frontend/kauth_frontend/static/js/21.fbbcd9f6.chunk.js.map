{
  "version": 3,
  "sources": [
    "components/SignUpScreen/SignUpScreen.js"
  ],
  "names": [
    "Copyright",
    "react__WEBPACK_IMPORTED_MODULE_2___default",
    "a",
    "createElement",
    "_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_13__",
    "variant",
    "color",
    "align",
    "_material_ui_core_Link__WEBPACK_IMPORTED_MODULE_9__",
    "href",
    "Date",
    "getFullYear",
    "useStyles",
    "makeStyles",
    "theme",
    "paper",
    "marginTop",
    "spacing",
    "display",
    "flexDirection",
    "alignItems",
    "avatar",
    "margin",
    "backgroundColor",
    "palette",
    "secondary",
    "main",
    "form",
    "width",
    "submit",
    "SignUpScreen",
    "classes",
    "_React$useState",
    "React",
    "useState",
    "lastname",
    "firstname",
    "email",
    "username",
    "password",
    "username_error",
    "password_error",
    "_React$useState2",
    "Object",
    "E_Projects_phpstormprojects_kauth_new_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__",
    "text",
    "setText",
    "_React$useState3",
    "_React$useState4",
    "authComplete",
    "setAuthComplete",
    "_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_15__",
    "component",
    "maxWidth",
    "_material_ui_core_CssBaseline__WEBPACK_IMPORTED_MODULE_5__",
    "_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_18__",
    "open",
    "disableBackdropClick",
    "disableEscapeKeyDown",
    "aria-labelledby",
    "aria-describedby",
    "_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_19__",
    "id",
    "_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_21__",
    "_material_ui_core_DialogContentText__WEBPACK_IMPORTED_MODULE_20__",
    "className",
    "_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_3__",
    "_material_ui_icons_LockOutlined__WEBPACK_IMPORTED_MODULE_12___default",
    "noValidate",
    "_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_10__",
    "container",
    "item",
    "xs",
    "sm",
    "_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_6__",
    "autoComplete",
    "name",
    "required",
    "fullWidth",
    "label",
    "autoFocus",
    "onChange",
    "event",
    "persist",
    "prevState",
    "E_Projects_phpstormprojects_kauth_new_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__",
    "target",
    "value",
    "type",
    "_material_ui_core_FormControlLabel__WEBPACK_IMPORTED_MODULE_7__",
    "control",
    "_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_8__",
    "_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_4__",
    "onClick",
    "fetch",
    "endPoints",
    "CreateAccount",
    "method",
    "timeout",
    "headers",
    "Accept",
    "Content-Type",
    "body",
    "getFormData",
    "then",
    "res",
    "json",
    "concat",
    "token",
    "catch",
    "e",
    "console",
    "log",
    "justify",
    "StartInternalOauthFlow",
    "_material_ui_core_Box__WEBPACK_IMPORTED_MODULE_11__",
    "mt"
  ],
  "mappings": "8VAqBA,SAASA,IACL,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACnD,kBACDN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,4BAA3B,gBAEQ,KACP,IAAIC,MAAOC,cACX,KAKb,IAAMC,EAAYC,YAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE7CC,KAAM,CACFC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE7BY,OAAQ,CACJP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,OAIrB,SAASa,IACpB,IAAMC,EAAUnB,IADmBoB,EAEXC,IAAMC,SAAS,CACnCC,SAAU,GACVC,UAAW,GACXC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVC,gBAAgB,EAChBC,gBAAgB,IATeC,EAAAC,OAAAC,EAAA,EAAAD,CAAAX,EAAA,GAE5Ba,EAF4BH,EAAA,GAEtBI,EAFsBJ,EAAA,GAAAK,EAWKd,IAAMC,WAXXc,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAW5BE,EAX4BD,EAAA,GAWdE,EAXcF,EAAA,GAwBnC,OACI/C,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACjCpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,MACArD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CACIC,OAAQP,EACRQ,sBAAsB,EACtBC,sBAAsB,EACtBC,kBAAgB,qBAChBC,mBAAiB,4BAEjB3D,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAaC,GAAG,sBAAhB,oBACA7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,KACI9D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAmBF,GAAG,4BAClB7D,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACK6C,GAELhD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,QAAS,WAArB,+BAMZJ,EAAAC,EAAAC,cAAA,OAAK8D,UAAWlC,EAAQhB,OACpBd,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAQD,UAAWlC,EAAQV,QACvBpB,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,OAEJD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYgD,UAAU,KAAK/C,QAAQ,MAAnC,WAGAJ,EAAAC,EAAAC,cAAA,QAAM8D,UAAWlC,EAAQJ,KAAMyC,YAAU,GACrCnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMC,WAAS,EAACrD,QAAS,GACrBhB,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBxE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CACIC,aAAa,QACbC,KAAK,YACLvE,QAAQ,WACRwE,UAAQ,EACRC,WAAS,EACThB,GAAG,YACHiB,MAAM,aACNC,WAAS,EACTC,SAAU,SAAAC,GACNA,EAAMC,UACNrC,EAAQ,SAAAsC,GAAS,OAAAzC,OAAA0C,EAAA,EAAA1C,CAAA,GACVyC,EADU,CAEbhD,UAAW8C,EAAMI,OAAOC,cAKxCtF,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBxE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CACIrE,QAAQ,WACRwE,UAAQ,EACRC,WAAS,EACThB,GAAG,WACHiB,MAAM,YACNH,KAAK,WACLD,aAAa,QACbM,SAAU,SAAAC,GACNA,EAAMC,UACNrC,EAAQ,SAAAsC,GAAS,OAAAzC,OAAA0C,EAAA,EAAA1C,CAAA,GACVyC,EADU,CAEbjD,SAAU+C,EAAMI,OAAOC,cAKvCtF,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACXvE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CACIrE,QAAQ,WACRwE,UAAQ,EACRC,WAAS,EACThB,GAAG,WACHiB,MAAM,WACNH,KAAK,WACLD,aAAa,WACbM,SAAU,SAAAC,GACNA,EAAMC,UACNrC,EAAQ,SAAAsC,GAAS,OAAAzC,OAAA0C,EAAA,EAAA1C,CAAA,GACVyC,EADU,CAEb9C,SAAU4C,EAAMI,OAAOC,cAKvCtF,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACXvE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CACIrE,QAAQ,WACRwE,UAAQ,EACRC,WAAS,EACThB,GAAG,QACHiB,MAAM,gBACNH,KAAK,QACLD,aAAa,QACbM,SAAU,SAAAC,GACNA,EAAMC,UACNrC,EAAQ,SAAAsC,GAAS,OAAAzC,OAAA0C,EAAA,EAAA1C,CAAA,GACVyC,EADU,CAEb/C,MAAO6C,EAAMI,OAAOC,cAKpCtF,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACXvE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CACIrE,QAAQ,WACRwE,UAAQ,EACRC,WAAS,EACTF,KAAK,WACLG,MAAM,WACNS,KAAK,WACL1B,GAAG,WACHa,aAAa,mBACbM,SAAU,SAAAC,GACNA,EAAMC,UACNrC,EAAQ,SAAAsC,GAAS,OAAAzC,OAAA0C,EAAA,EAAA1C,CAAA,GACVyC,EADU,CAEb7C,SAAU2C,EAAMI,OAAOC,cAKvCtF,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACXvE,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACIC,QAASzF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAUJ,MAAM,mBAAmBjF,MAAM,YAClDyE,MAAM,iFAIlB9E,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACIC,QA/IC,WACjBC,MAAMC,IAAUC,cAAe,CAC3BC,OAAQ,OACRC,QAAS,EACTC,QAAS,CAACC,OAAU,mBAAoBC,eAAgB,qCACxDC,KAAMC,YAAY1D,KAEjB2D,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAjB,GAAK,OAAIrC,EAAgBjD,EAAAC,EAAAC,cAAA,sCAA6BF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,KAAI,qBAAAkG,OAAuBpB,EAAMqB,QAAvC,UAA7B,qBAE9BC,MAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,MAsIZhC,WAAS,EACTzE,QAAQ,YACRC,MAAM,UACN2D,UAAWlC,EAAQF,QALvB,WASA5B,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMC,WAAS,EAAC2C,QAAQ,YACpBhH,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAME,MAAI,GACNtE,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,KAAMsF,IAAUmB,uBAAyB,mBAAoB7G,QAAQ,SAA3E,wCAOhBJ,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAKC,GAAI,GACLnH,EAAAC,EAAAC,cAACH,EAAD",
  "file": "static/js/21.fbbcd9f6.chunk.js",
  "sourcesContent": [
    "import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {endPoints} from \"../../api/endPoints\";\nimport {getFormData, makeBody} from \"../../functions/Misc/Misc\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function SignUpScreen() {\n    const classes = useStyles();\n    const [text, setText] = React.useState({\n        lastname: '',\n        firstname: '',\n        email: '',\n        username: '',\n        password: '',\n        username_error: false,\n        password_error: false,\n    });\n    const [authComplete, setAuthComplete] = React.useState();\n    const handleSubmit = () => {\n        fetch(endPoints.CreateAccount, {\n            method: \"POST\",\n            timeout: 0,\n            headers: {'Accept': 'application/json', \"Content-Type\": \"application/x-www-form-urlencoded\"},\n            body: getFormData(text)\n        })\n            .then(res => res.json())\n            .then(value => setAuthComplete(<div>Authentication Complete <Link href={`/auth/user/verify/${value.token}`}>Verify</Link> account\n                here!</div>))\n            .catch(e => console.log(e))\n    };\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <Dialog\n                open={!!authComplete}\n                disableBackdropClick={true}\n                disableEscapeKeyDown={true}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">Sign up Complete</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <Typography>\n                            {authComplete}\n                        </Typography>\n                        <Typography variant={\"caption\"}>\n                            You cannot do this again\n                        </Typography>\n                    </DialogContentText>\n                </DialogContent>\n            </Dialog>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                autoComplete=\"fname\"\n                                name=\"firstName\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                                autoFocus\n                                onChange={event => {\n                                    event.persist();\n                                    setText(prevState => ({\n                                        ...prevState,\n                                        firstname: event.target.value\n                                    }))\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                autoComplete=\"lname\"\n                                onChange={event => {\n                                    event.persist();\n                                    setText(prevState => ({\n                                        ...prevState,\n                                        lastname: event.target.value\n                                    }))\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Username\"\n                                name=\"username\"\n                                autoComplete=\"username\"\n                                onChange={event => {\n                                    event.persist();\n                                    setText(prevState => ({\n                                        ...prevState,\n                                        username: event.target.value\n                                    }))\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                onChange={event => {\n                                    event.persist();\n                                    setText(prevState => ({\n                                        ...prevState,\n                                        email: event.target.value\n                                    }))\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={event => {\n                                    event.persist();\n                                    setText(prevState => ({\n                                        ...prevState,\n                                        password: event.target.value\n                                    }))\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControlLabel\n                                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\"/>}\n                                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        onClick={handleSubmit}\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href={endPoints.StartInternalOauthFlow + '?prompt=password'} variant=\"body2\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={5}>\n                <Copyright/>\n            </Box>\n        </Container>\n    );\n}\n"
  ],
  "sourceRoot": ""
}
