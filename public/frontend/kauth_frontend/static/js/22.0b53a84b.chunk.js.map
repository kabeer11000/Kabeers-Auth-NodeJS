{
  "version": 3,
  "sources": [
    "components/AccountChooser/AccountChooser.js"
  ],
  "names": [
    "useStyles",
    "makeStyles",
    "theme",
    "root",
    "width",
    "maxWidth",
    "minWidth",
    "backgroundColor",
    "palette",
    "background",
    "paper",
    "avatar",
    "margin",
    "spacing",
    "secondary",
    "main",
    "inline",
    "display",
    "marginTop",
    "flexDirection",
    "alignItems",
    "alignCenter",
    "backdrop",
    "zIndex",
    "drawer",
    "color",
    "AccountChooser",
    "props",
    "Accounts",
    "localStorage",
    "getItem",
    "JSON",
    "parse",
    "classes",
    "MainElement",
    "Error",
    "AppData",
    "appName",
    "getAttribute",
    "_React$useContext",
    "React",
    "useContext",
    "AccountVerificationContext",
    "_React$useContext2",
    "Object",
    "E_Projects_phpstormprojects_kauth_new_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__",
    "setAccount",
    "_React$useState",
    "useState",
    "_React$useState2",
    "open",
    "setOpen",
    "useEffect",
    "document",
    "title",
    "concat",
    "react__WEBPACK_IMPORTED_MODULE_3___default",
    "a",
    "createElement",
    "className",
    "_material_ui_core_Backdrop__WEBPACK_IMPORTED_MODULE_19__",
    "_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_20__",
    "_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_13__",
    "component",
    "_material_ui_core_Slide__WEBPACK_IMPORTED_MODULE_24__",
    "in",
    "direction",
    "_material_ui_core_Card__WEBPACK_IMPORTED_MODULE_16__",
    "_material_ui_core_CardContent__WEBPACK_IMPORTED_MODULE_17__",
    "_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_8__",
    "_material_ui_icons__WEBPACK_IMPORTED_MODULE_14__",
    "_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_11__",
    "variant",
    "_material_ui_core_List__WEBPACK_IMPORTED_MODULE_5__",
    "map",
    "account",
    "index",
    "Fragment",
    "key",
    "_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_6__",
    "style",
    "button",
    "onClick",
    "ChooserLoginTest",
    "then",
    "res",
    "json",
    "_ref",
    "E_Projects_phpstormprojects_kauth_new_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__",
    "E_Projects_phpstormprojects_kauth_new_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default",
    "mark",
    "_callee",
    "value",
    "wrap",
    "_context",
    "prev",
    "next",
    "status",
    "Devices",
    "sendUpdateEmail",
    "abrupt",
    "handleDeviceVerification",
    "alert",
    "AddToAccounts",
    "callNext",
    "stop",
    "_x",
    "apply",
    "this",
    "arguments",
    "catch",
    "e",
    "LoginHelper",
    "_material_ui_core_ListItemAvatar__WEBPACK_IMPORTED_MODULE_9__",
    "alt",
    "username",
    "src",
    "account_image",
    "_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_10__",
    "primary",
    "email",
    "_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_7__",
    "_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_18__",
    "window",
    "location",
    "href",
    "UpdateQueryStringParam",
    "defaultProps"
  ],
  "mappings": "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",
  "file": "static/js/22.0b53a84b.chunk.js",
  "sourcesContent": [
    "import React from 'react';\nimport './AccountChooser.css';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Container from \"@material-ui/core/Container\";\nimport {LockOutlined} from \"@material-ui/icons\";\nimport {ChooserLoginTest, Devices} from \"../../functions/Login/Login\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from 'prop-types';\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {AddToAccounts} from \"../../functions/Login/AddToAccounts\";\nimport {MainElement, UpdateQueryStringParam} from \"../../functions/Misc/Misc\";\nimport {AccountVerificationContext} from \"../../contexts/Contexts\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '50ch',\n        minWidth: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    inline: {\n        display: 'inline',\n    },\n    main: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    alignCenter: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        minWidth: '100%',\n        width: '100%'\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\nconst AccountChooser = (props) => {\n    const Accounts = localStorage.getItem('accounts') === null ? null : JSON.parse(localStorage.getItem('accounts'));\n    const classes = useStyles();\n    if (!MainElement) return new Error('Main Element Not Defined');\n    const AppData = {\n        appName: MainElement.getAttribute('appName'),\n    };\n    const [account, setAccount] = React.useContext(AccountVerificationContext);\n    const [open, setOpen] = React.useState(false);\n\n    const LoginHelper = (account) => {\n        setOpen(!open);\n        ChooserLoginTest(account).then(res => res.json())\n            .then(async value => {\n                if (value.status === 69) return (setAccount(account), await Devices.sendUpdateEmail(account), props.handleDeviceVerification(1));\n                if (value.status !== 200) return alert(\"unKnown Error Code\");\n                if (value !== 'Nothing Found') await AddToAccounts(value).then(() => {\n                    setAccount(account);\n                    props.callNext();\n                });\n            })\n            .catch(e => {\n                setOpen(false);\n            });\n    };\n    React.useEffect(() => {\n        document.title = `Sign in to continue to ${MainElement.getAttribute('appName')}. Choose an Account`;\n    }, []);\n    return (\n        <div className={`AccountChooser`}>\n            <Backdrop className={classes.backdrop} open={open}>\n                <CircularProgress color=\"inherit\"/>\n            </Backdrop>\n            <Container component=\"main\" className={'mt-5 pt-2 pb-2'} maxWidth=\"xs\">\n                <Slide in={true} direction={\"left\"}>\n                    <Card className={classes.main}>\n                        <CardContent className={classes.alignCenter}>\n                            <Avatar className={classes.avatar}>\n                                <LockOutlined/>\n                            </Avatar>\n                            <Typography component=\"h1\" variant=\"h5\">\n                                Choose An Account\n                            </Typography>\n                            <Typography variant={\"overline\"} className={\"text-center\"}>\n                                Continue to\n                                <Typography className={\"ml-1\"} variant={\"overline\"} color={\"secondary\"}>\n                                    {AppData.appName}\n                                </Typography>\n                            </Typography>\n                            <List className={classes.root}>\n                                {\n                                    Accounts.map((account, index) => (\n                                        <React.Fragment key={index}>\n                                            <ListItem style={{minWidth: '100%'}} button alignItems=\"flex-start\"\n                                                      onClick={() => LoginHelper(account)}>\n                                                <ListItemAvatar>\n                                                    <Avatar alt={account.username} src={account.account_image}/>\n                                                </ListItemAvatar>\n                                                <ListItemText\n                                                    primary={account.username}\n                                                    secondary={account.email}\n                                                />\n                                            </ListItem>\n                                            <Divider variant=\"inset\" component=\"li\"/>\n                                        </React.Fragment>\n                                    ))\n                                }\n                                <ListItem alignItems=\"center\" className={\"text-center mt-2\"}>\n                                    <ListItemText\n                                        primary={\n                                            <React.Fragment>\n                                                <Button className={\"w-100\"}\n                                                        onClick={() => window.location.href = UpdateQueryStringParam(window.location.href, 'prompt', 'password')}>\n                                                    Add New Account\n                                                </Button>\n                                            </React.Fragment>\n                                        }\n                                    />\n                                </ListItem>\n                            </List>\n                        </CardContent>\n                    </Card>\n                </Slide>\n            </Container>\n        </div>\n    );\n};\n\nAccountChooser.propTypes = {\n    handleNext: PropTypes.func,\n    handleBack: PropTypes.func,\n};\n\nAccountChooser.defaultProps = {};\n\nexport default AccountChooser;\n"
  ],
  "sourceRoot": ""
}
