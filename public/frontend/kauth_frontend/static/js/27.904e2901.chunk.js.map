{
  "version": 3,
  "sources": [
    "components/Settings/Settings.js"
  ],
  "names": [
    "Settings",
    "props",
    "_React$useContext",
    "React",
    "useContext",
    "AccountVerificationContext",
    "_React$useContext2",
    "Object",
    "E_Projects_phpstormprojects_kauth_new_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__",
    "account",
    "_React$useState",
    "useState",
    "DevicesDialog",
    "_React$useState2",
    "state",
    "setState",
    "react__WEBPACK_IMPORTED_MODULE_2___default",
    "a",
    "createElement",
    "className",
    "_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_10__",
    "_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_11__",
    "_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_15__",
    "_material_ui_icons__WEBPACK_IMPORTED_MODULE_12__",
    "_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_16__",
    "variant",
    "_material_ui_core_List__WEBPACK_IMPORTED_MODULE_4__",
    "style",
    "marginTop",
    "display",
    "justifyContent",
    "_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_5__",
    "alt",
    "username",
    "src",
    "account_image",
    "_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_6__",
    "id",
    "primary",
    "concat",
    "_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_7__",
    "_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_8__",
    "button",
    "onClick",
    "E_Projects_phpstormprojects_kauth_new_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__",
    "_material_ui_core_ListItemIcon__WEBPACK_IMPORTED_MODULE_20__",
    "_material_ui_icons__WEBPACK_IMPORTED_MODULE_13__",
    "secondary",
    "alert",
    "_material_ui_icons__WEBPACK_IMPORTED_MODULE_14__",
    "_material_ui_core_ListItemSecondaryAction__WEBPACK_IMPORTED_MODULE_23__",
    "edge",
    "aria-label",
    "_material_ui_core_Switch__WEBPACK_IMPORTED_MODULE_24__",
    "_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_17__",
    "onClose",
    "open",
    "_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_18__",
    "_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_19__",
    "dividers",
    "webauthn_devices",
    "map",
    "noWrap",
    "_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_22__",
    "_material_ui_core__WEBPACK_IMPORTED_MODULE_21__",
    "defaultProps"
  ],
  "mappings": "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",
  "file": "static/js/27.904e2901.chunk.js",
  "sourcesContent": [
    "import React from 'react';\nimport './Settings.css';\nimport List from \"@material-ui/core/List\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {AccountVerificationContext} from \"../../contexts/Contexts\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport {ArrowBack, PhonelinkLock, VerifiedUser} from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport {Button} from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Switch from \"@material-ui/core/Switch\";\n//import {useSnackbar} from \"notistack\";\n\nconst Settings = (props) => {\n    //const {enqueueSnackbar, closeSnackbar} = useSnackbar();\n    const [account, setAccount] = React.useContext(AccountVerificationContext);\n    const [state, setState] = React.useState({\n        DevicesDialog: false\n    });\n    return (\n        <div className=\"Settings\">\n            <AppBar>\n                <Toolbar>\n                    <IconButton>\n                        <ArrowBack/>\n                    </IconButton>\n                    <Typography variant={\"h6\"}>\n                        Settings\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <List className={\"text-left\"} style={{marginTop: \"5rem\"}}>\n                <div style={{display: \"inline-flex\", justifyContent: \"center\"}} className={\"w-100\"}>\n                    <Avatar alt={account.username}\n                            src={account.account_image}/>\n                </div>\n                <div className={\"text-center\"}>\n                    <ListItemText id=\"switch-list-label-wifi\"\n                                  primary={`Welcome ${account.username}`}/>\n                </div>\n                <Divider/>\n                <ListItem button onClick={() => {\n                    setState({...state, DevicesDialog: !state.DevicesDialog});\n                }}>\n                    <ListItemIcon>\n                        <VerifiedUser/>\n                    </ListItemIcon>\n                    <ListItemText primary={\"Verified Devices\"}\n                                  secondary={\"Devices Verified and Connected to your Account\"}/></ListItem>\n                <Divider/>\n                <ListItem button onClick={() => alert(\"Feature Not Implemented Yet\")}>\n                    <ListItemIcon>\n                        <PhonelinkLock/>\n                    </ListItemIcon>\n                    <ListItemText primary={\"2 Factor Authentication\"}\n                                  secondary={\"Enable 2 Factor Auth\"}/>\n                    <ListItemSecondaryAction>\n                        <IconButton edge=\"end\" aria-label=\"delete\">\n                            <Switch/>\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </List>\n            <Dialog onClose={() => setState({...state, DevicesDialog: !state.DevicesDialog})}\n                    open={state.DevicesDialog}>\n                <DialogTitle id=\"confirmation-dialog-title\">Verified Devices</DialogTitle>\n                <DialogContent dividers={false}>\n                    {\n                        account.webauthn_devices.map(id => (\n                            <ListItem button>\n                                <ListItemIcon>\n                                    <VerifiedUser/>\n                                </ListItemIcon>\n                                <ListItemText>\n                                    <Typography noWrap className={\"text-truncate\"}>\n                                        {id}\n                                    </Typography>\n                                </ListItemText>\n                            </ListItem>\n                        ))\n                    }\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setState({...state, DevicesDialog: !state.DevicesDialog})}>\n                        Done\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nSettings.propTypes = {};\n\nSettings.defaultProps = {};\n\nexport default Settings;\n"
  ],
  "sourceRoot": ""
}
