{"version":3,"sources":["functions/Misc/Misc.js","components/Preloader/Preloader.js","api/endPoints.js","contexts/Contexts.js","components/StepperBase/StepperBase.lazy.js","components/AppBarComponent/AppBarComponent.lazy.js","components/SignUpScreen/SignUpScreen.lazy.js","components/AppComponent/AppComponent.lazy.js","components/EmbeddedAccountSystem/EmbeddedAccountSystem.lazy.js","App.js","serviceWorker.js","index.js"],"names":["getQueryParam","name","url","window","location","href","replace","results","RegExp","exec","decodeURIComponent","MainElement","document","getElementById","getFormData","n","e","o","hasOwnProperty","push","encodeURIComponent","join","UpdateQueryStringParam","uri","key","value","re","separator","indexOf","match","cookies","getCookie","t","cookie","split","length","r","charAt","substring","setCookie","Date","setTime","getTime","toUTCString","__webpack_require__","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_2__","Preloader","a","createElement","className","style","width","height","position","top","left","transform","defaultProps","d","endPoints","hostName","concat","protocol","host","authAllow","authToken","chooserLoginTest","c","getSecretFromHash","getUserApps","removeOauthApp","StartInternalOauthFlow","CreateAccount","VerifyAccount","UserDevicesUpdate","UserDevicesSendEmail","ServerSavedState","m","GetClientInfo","AccountVerificationContext","React","createContext","AccountVerificationProvider","_ref","children","_React$useState","useState","_React$useState2","Object","E_Projects_phpstormprojects_kauth_new_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","account","setAccount","react__WEBPACK_IMPORTED_MODULE_1___default","Provider","LazyStepperBase","lazy","Promise","all","then","bind","StepperBase","props","react_default","react","fallback","LazyAppBarComponent","AppBarComponent","LazySignUpScreen","SignUpScreen","LazySettings","AppComponent","LazyEmbeddedAccountSystem","EmbeddedAccountSystem","App","slicedToArray","error","setError","_React$useState3","_React$useState4","errorDesc","setErrorDesc","_React$useState5","_React$useState6","darkState","palletType","darkTheme","createMuiTheme","palette","type","useEffect","frameElement","ThemeProvider","theme","CssBaseline","react_router_dom","arguments","undefined","Container","component","maxWidth","Avatar","src","alt","Typography","variant","errorPage","Contexts","react_router","path","getAttribute","exact","AppBarComponent_lazy","Fragment","AppComponent_lazy","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","fetch","headers","Service-Worker","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"+QAEaA,EAAgB,SAACC,EAAMC,GAC3BA,IAAKA,EAAMC,OAAOC,SAASC,MAChCJ,EAAOA,EAAKK,QAAQ,UAAW,QAC/B,IACIC,EADQ,IAAIC,OAAO,OAASP,EAAO,qBACnBQ,KAAKP,GACzB,OAAKK,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAGD,QAAQ,MAAO,MAD5B,GADH,MAaZK,EAAcC,SAASC,eAAe,iBACtCC,EAAc,SAAAC,GACvB,IAAIC,EAAI,GACR,IAAK,IAAIC,KAAKF,EAAGA,EAAEG,eAAeD,IAAMD,EAAEG,KAAKC,mBAAmBH,GAAK,IAAMG,mBAAmBL,EAAEE,KAClG,OAAOD,EAAEK,KAAK,MAGLC,EAAyB,SAACC,EAAKC,EAAKC,GAC7C,IAAIC,EAAK,IAAIlB,OAAO,SAAWgB,EAAM,YAAa,KAC9CG,GAAkC,IAAtBJ,EAAIK,QAAQ,KAAc,IAAM,IAChD,OAAIL,EAAIM,MAAMH,GACHH,EAAIjB,QAAQoB,EAAI,KAAOF,EAAM,IAAMC,EAAQ,MAE3CF,EAAMI,EAAYH,EAAM,IAAMC,GAkBtC,IAAMK,EAAU,CACnBC,UADmB,SACTf,GACN,IAAK,IAAIgB,EAAIhB,EAAI,IAAKC,EAAIP,mBAAmBE,SAASqB,QAAQC,MAAM,KAAMnB,EAAI,EAAGA,EAAIE,EAAEkB,OAAQpB,IAAK,CAChG,IAAK,IAAIqB,EAAInB,EAAEF,GAAI,MAAQqB,EAAEC,OAAO,IAAKD,EAAIA,EAAEE,UAAU,GACzD,GAAI,IAAMF,EAAER,QAAQI,GAAI,OAAOI,EAAEE,UAAUN,EAAEG,OAAQC,EAAED,QAE3D,MAAO,IACRI,UAPgB,SAONvB,EAAGgB,EAAGf,GACf,IAAMF,EAAI,IAAIyB,KACdzB,EAAE0B,QAAQ1B,EAAE2B,UAAY,GAAKzB,EAAI,GAAK,GAAK,KAC3C,IAAMmB,EAAI,WAAarB,EAAE4B,cACzB/B,SAASqB,OAASjB,EAAI,IAAMgB,EAAI,IAAMI,EAAI,6CC9DlDQ,EAAAR,EAAAS,GAAA,IAAAC,EAAAF,EAAA,GAAAG,EAAAH,EAAA7B,EAAA+B,GAAAE,GAAAJ,EAAA,IAAAA,EAAA,KAIMK,EAAY,kBACdF,EAAAG,EAAAC,cAAA,OAAKC,UAAU,wBAAwBC,MAAO,CAC1CC,MAAO,QACPC,OAAQ,QACRC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,0BAEXZ,EAAAG,EAAAC,cAACH,EAAA,EAAD,QAMRC,EAAUW,aAAe,GAEVX,6CCrBfL,EAAAiB,EAAAhB,EAAA,sBAAAiB,IAAA,IAAMC,EAAQ,GAAAC,OAAM7D,OAAOC,SAAS6D,SAAtB,MAAAD,OAAmC7D,OAAOC,SAAS8D,MAGpDJ,EAAY,CACvBK,UAAS,GAAAH,OAAKD,EAAL,eACTK,UAAS,GAAAJ,OAAKD,EAAL,eACTM,iBAAkB,SAACC,GAAD,SAAAN,OAAUD,EAAV,mDAAAC,OAAoEM,EAAI,KAAO,KACjGC,kBAAiB,GAAAP,OAAKD,EAAL,qCACjBS,YAAW,GAAAR,OAAKD,EAAL,kCACXU,eAAc,GAAAT,OAAKD,EAAL,8BACdW,uBAAsB,GAAAV,OAAKD,EAAL,wBACtBY,cAAa,GAAAX,OAAKD,EAAL,6BACba,cAAa,GAAAZ,OAAKD,EAAL,qBACbc,kBAAiB,GAAAb,OAAKD,EAAL,6BACjBe,qBAAoB,GAAAd,OAAKD,EAAL,mCAEpBgB,iBAAkB,SAACC,GAAD,SAAAhB,OAAUD,EAAV,6BAAAC,OAA8CgB,IAChEC,cAAa,6JCfFC,EAA6BC,IAAMC,eAAc,GACjDC,EAA8B,SAAAC,GAAgB,IAAdC,EAAcD,EAAdC,SAAcC,EACzBL,IAAMM,SAAS,MADUC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAChDK,EADgDH,EAAA,GACvCI,EADuCJ,EAAA,GAEvD,OACIK,EAAA7C,EAAAC,cAAC+B,EAA2Bc,SAA5B,CAAqCvE,MAAO,CAACoE,EAASC,IACjDP,mPCJPU,EAAkBC,eAAK,kBAAMC,QAAAC,IAAA,CAAAxD,EAAA5B,EAAA,GAAA4B,EAAA5B,EAAA,GAAA4B,EAAA5B,EAAA,GAAA4B,EAAA5B,EAAA,IAAA4B,EAAA5B,EAAA,MAAAqF,KAAAzD,EAAA0D,KAAA,aAQpBC,EANK,SAAAC,GAAK,OACrBC,EAAAvD,EAAAC,cAACuD,EAAA,SAAD,CAAUC,SAAUF,EAAAvD,EAAAC,cAACF,EAAA,QAAD,OAChBwD,EAAAvD,EAAAC,cAAC8C,EAAoBO,gCCLvBI,EAAsBV,eAAK,kBAAMC,QAAAC,IAAA,CAAAxD,EAAA5B,EAAA,GAAA4B,EAAA5B,EAAA,IAAA4B,EAAA5B,EAAA,MAAAqF,KAAAzD,EAAA0D,KAAA,aAQxBO,EANS,SAAAL,GAAK,OACzBC,EAAAvD,EAAAC,cAACuD,EAAA,SAAD,CAAUC,SAAU,MAChBF,EAAAvD,EAAAC,cAACyD,EAAwBJ,KCH3BM,EAAmBZ,eAAK,kBAAMC,QAAAC,IAAA,CAAAxD,EAAA5B,EAAA,GAAA4B,EAAA5B,EAAA,GAAA4B,EAAA5B,EAAA,GAAA4B,EAAA5B,EAAA,GAAA4B,EAAA5B,EAAA,MAAAqF,KAAAzD,EAAA0D,KAAA,aAQrBS,EANM,SAAAP,GAAK,OACtBC,EAAAvD,EAAAC,cAACuD,EAAA,SAAD,CAAUC,SAAUF,EAAAvD,EAAAC,cAACF,EAAA,QAAD,OAChBwD,EAAAvD,EAAAC,cAAC2D,EAAqBN,sCCLxBQ,EAAed,eAAK,kBAAMC,QAAAC,IAAA,CAAAxD,EAAA5B,EAAA,GAAA4B,EAAA5B,EAAA,MAAAqF,KAAAzD,EAAA0D,KAAA,aAQjBW,EANM,SAAAT,GAAK,OACtBC,EAAAvD,EAAAC,cAACuD,EAAA,SAAD,CAAUC,SAAU,MAChBF,EAAAvD,EAAAC,cAAC6D,EAAiBR,KCJpBU,EAA4BhB,eAAK,kBAAMC,QAAAC,IAAA,CAAAxD,EAAA5B,EAAA,GAAA4B,EAAA5B,EAAA,GAAA4B,EAAA5B,EAAA,IAAA4B,EAAA5B,EAAA,MAAAqF,KAAAzD,EAAA0D,KAAA,aAQ9Ba,EANe,SAAAX,GAAK,OAC/BC,EAAAvD,EAAAC,cAACuD,EAAA,SAAD,CAAUC,SAAU,MAChBF,EAAAvD,EAAAC,cAAC+D,EAA8BV,KCkFxBY,EAtEH,WAAM,IAAA5B,EAEYL,IAAMM,UAAS,GAF3BC,EAAAC,OAAA0B,EAAA,EAAA1B,CAAAH,EAAA,GAEP8B,EAFO5B,EAAA,GAEA6B,EAFA7B,EAAA,GAAA8B,EAGoBrC,IAAMM,SAASgB,EAAAvD,EAAAC,cAAA,8HACoBsD,EAAAvD,EAAAC,cAAA,qCAJvDsE,EAAA9B,OAAA0B,EAAA,EAAA1B,CAAA6B,EAAA,GAGPE,EAHOD,EAAA,GAGIE,EAHJF,EAAA,GAAAG,EAKoBzC,IAAMM,UAAS,GALnCoC,EAAAlC,OAAA0B,EAAA,EAAA1B,CAAAiC,EAAA,GAKPE,EALOD,EAAA,GAMRE,GANQF,EAAA,GAMKC,EAAY,OAAS,SAClCE,EAAYC,YAAe,CAC7BC,QAAS,CACLC,KAAMJ,KAsCd,OAJAK,oBAAU,WACN,GAAuC,UAAnCpI,YAAc,kBAAmE,OAAnCA,YAAc,iBAA8C,OAAOuH,GAAS,GAC3HpH,OAAOkI,eAAeV,EAAalB,EAAAvD,EAAAC,cAAA,0DAAwDoE,GAAS,KACxG,IAECd,EAAAvD,EAAAC,cAACmF,EAAA,EAAD,CAAeC,MAAOP,GAClBvB,EAAAvD,EAAAC,cAACqF,EAAA,EAAD,MACA/B,EAAAvD,EAAAC,cAACsF,EAAA,EAAD,KAnCU,eAACzD,EAAD0D,UAAAvG,OAAA,QAAAwG,IAAAD,UAAA,GAAAA,UAAA,GAAK,oCAAqC7E,EAA1C6E,UAAAvG,OAAA,QAAAwG,IAAAD,UAAA,GAAAA,UAAA,GAA8ChB,EAA9C,OAA4DJ,EAC1Eb,EAAAvD,EAAAC,cAAA,WACIsD,EAAAvD,EAAAC,cAACyF,EAAA,EAAD,CAAWC,UAAU,OAAOzF,UAAW,OAAQ0F,SAAS,MACpDrC,EAAAvD,EAAAC,cAAA,OAAKC,UAAW,wBACXC,MAAO,CACHG,SAAU,WACVC,IAAK,MACLC,KAAM,MACNJ,MAAO,OACPK,UAAW,0BAEhB8C,EAAAvD,EAAAC,cAAA,OAAKC,UAAW,6CACZqD,EAAAvD,EAAAC,cAAC4F,EAAA,EAAD,CAAQC,IAAK,2DACLC,IAAK,0BAEjBxC,EAAAvD,EAAAC,cAAA,WACAsD,EAAAvD,EAAAC,cAAA,WACIsD,EAAAvD,EAAAC,cAAC+F,EAAA,EAAD,CAAYC,QAAS,QAAS/F,UAAW,QACpC4B,GAELyB,EAAAvD,EAAAC,cAAC+F,EAAA,EAAD,CAAYC,QAAS,WAChBtF,OAMrB,KAUYuF,GAEJ3C,EAAAvD,EAAAC,cAACkG,EAAA,EAAD,KACI5C,EAAAvD,EAAAC,cAACmG,EAAA,EAAD,CAAOC,KAAM,CAAC,mBAA4CV,UAAWlI,IAAY6I,aAAa,YAAcrC,EAAwBZ,IACpIE,EAAAvD,EAAAC,cAACmG,EAAA,EAAD,CAAOC,KAAM,kBAAmBV,UAAW9B,IAC3CN,EAAAvD,EAAAC,cAACmG,EAAA,EAAD,CAAOG,OAAK,EAACF,KAAM,CAAC,QAAS,IAAK,QAAS,aACvC9C,EAAAvD,EAAAC,cAACuG,EAAD,OAEJjD,EAAAvD,EAAAC,cAACmG,EAAA,EAAD,CAAOG,OAAK,EAACF,KAAM,CAAC,QAAS,IAAK,QAAS,WAAY,cACnD9C,EAAAvD,EAAAC,cAACsD,EAAAvD,EAAMyG,SAAP,KACIlD,EAAAvD,EAAAC,cAACyG,EAAD,YCpEtBC,EAAcC,QACW,cAA7B3J,OAAOC,SAAS2J,UAEe,UAA7B5J,OAAOC,SAAS2J,UAEhB5J,OAAOC,SAAS2J,SAASlI,MACvB,2DAsCN,SAASmI,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT5D,KAAK,SAAAiE,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAAST,KAMlBO,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUV,UAO5BW,MAAM,SAAA3D,GACLuD,QAAQvD,MAAM,4CAA6CA,KC1FjE4D,IAASC,OACL1E,EAAAvD,EAAAC,cAACiI,EAAD,MACAxK,SAASC,eAAe,SDcrB,SAAkBqJ,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,2BAAwBnL,OAAOC,SAASC,MACpDkL,SAAWpL,OAAOC,SAASmL,OAIvC,OAGFpL,OAAOqL,iBAAiB,OAAQ,WAC9B,IAAMvB,EAAK,GAAAjG,OAAMsH,2BAAN,sBAEPzB,GAgEV,SAAiCI,EAAOC,GAEtCuB,MAAMxB,EAAO,CACXyB,QAAS,CAAEC,iBAAkB,YAE5BtF,KAAK,SAAAuF,GAEJ,IAAMC,EAAcD,EAASF,QAAQI,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYjK,QAAQ,cAG5CuI,UAAUC,cAAc4B,MAAM3F,KAAK,SAAAiE,GACjCA,EAAa2B,aAAa5F,KAAK,WAC7BlG,OAAOC,SAAS8L,aAKpBlC,EAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEAvFAqB,CAAwBlC,EAAOC,GAI/BC,UAAUC,cAAc4B,MAAM3F,KAAK,WACjCwE,QAAQC,IACN,gHAMJd,EAAgBC,EAAOC,MCpC/BE","file":"static/js/main.d6c56f5c.chunk.js","sourcesContent":["import {endPoints} from \"../../api/endPoints\";\r\n\r\nexport const getQueryParam = (name, url) => {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n};\r\nexport const parseQuery = (queryString) => {\r\n    var query = {};\r\n    var pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&');\r\n    for (var i = 0; i < pairs.length; i++) {\r\n        var pair = pairs[i].split('=');\r\n        query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\r\n    }\r\n    return query;\r\n};\r\nexport const MainElement = document.getElementById('DataContainer');\r\nexport const getFormData = n => {\r\n    let e = [];\r\n    for (let o in n) n.hasOwnProperty(o) && e.push(encodeURIComponent(o) + \"=\" + encodeURIComponent(n[o]));\r\n    return e.join(\"&\")\r\n};\r\n\r\nexport const UpdateQueryStringParam = (uri, key, value) => {\r\n    var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\r\n    var separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\r\n    if (uri.match(re)) {\r\n        return uri.replace(re, '$1' + key + \"=\" + value + '$2');\r\n    } else {\r\n        return uri + separator + key + \"=\" + value;\r\n    }\r\n};\r\n\r\nexport const makeBody = d => Object.keys(d).reduce(function (a, k) {\r\n    a.push(k + '=' + encodeURIComponent(d[k]));\r\n    return a\r\n}, []).join('&');\r\n\r\n//\"homepage\": \"/auth/authorize\",\r\nfunction serialize(obj) {\r\n    let str = '?' + Object.keys(obj).reduce(function (a, k) {\r\n        a.push(k + '=' + encodeURIComponent(obj[k]));\r\n        return a;\r\n    }, []).join('&');\r\n    return str;\r\n}\r\n\r\nexport const cookies = {\r\n    getCookie(e) {\r\n        for (let t = e + \"=\", o = decodeURIComponent(document.cookie).split(\";\"), n = 0; n < o.length; n++) {\r\n            for (var r = o[n]; \" \" === r.charAt(0);) r = r.substring(1);\r\n            if (0 === r.indexOf(t)) return r.substring(t.length, r.length);\r\n        }\r\n        return \"\";\r\n    }, setCookie(e, t, o) {\r\n        const n = new Date;\r\n        n.setTime(n.getTime() + 24 * o * 60 * 60 * 1e3);\r\n        const r = \"expires=\" + n.toUTCString();\r\n        document.cookie = e + \"=\" + t + \";\" + r + \";path=/\";\r\n    }\r\n};\r\nexport const generateRandomHash = (l = 20) => btoa(+new Date).substr(-l, l);\r\nexport const getServerSideState = async () => (await fetch(endPoints.ServerSavedState(\"get\"), {method: \"POST\"})).json();\r\nexport const setServerSideState = async (state) => (await fetch(endPoints.ServerSavedState(\"save\"), {\r\n    method: \"POST\", body: getFormData({\r\n        state: JSON.stringify(state),\r\n    })\r\n})).json();\r\n","import React from \"react\";\nimport \"./Preloader.css\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Preloader = () => (\n    <div className=\"Preloader text-center\" style={{\n        width: \"10rem\",\n        height: \"10rem\",\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: 'translate(-50%, -50%)'\n    }}>\n        <CircularProgress/>\n    </div>\n);\n\nPreloader.propTypes = {};\n\nPreloader.defaultProps = {};\n\nexport default Preloader;\n","const hostName = `${window.location.protocol}//${window.location.host}`;\r\n//const hostName = `${window.location.protocol}//${window.location.hostname}:3000`;\r\n\r\nexport const endPoints = {\r\n  authAllow: `${hostName}/auth/allow`,\r\n  authToken: `${hostName}/auth/token`,\r\n  chooserLoginTest: (c) => `${hostName}/auth/user/challenge/chooser_login_verification${c ? \"/c\" : \"\"}`,\r\n  getSecretFromHash: `${hostName}/auth/implict_grant_unhash_secret`,\r\n  getUserApps: `${hostName}/users/api/generate_apps_perms`,\r\n  removeOauthApp: `${hostName}/user/api/remove_oauth_app`,\r\n  StartInternalOauthFlow: `${hostName}/app/start_oauthFlow`,\r\n  CreateAccount: `${hostName}/auth/user/create-account`,\r\n  VerifyAccount: `${hostName}/auth/user/verify`,\r\n  UserDevicesUpdate: `${hostName}/auth/user/devices/update`,\r\n  UserDevicesSendEmail: `${hostName}/auth/user/devices/verify/email`,\r\n  // Refresh State Persist\r\n  ServerSavedState: (m) => `${hostName}/auth/user/session/state/${m}`,\r\n  GetClientInfo: `https://json.geoiplookup.io/`,\r\n};\r\n","import React from \"react\";\r\n\r\nexport const AccountVerificationContext = React.createContext(false);\r\nexport const AccountVerificationProvider = ({children}) => {\r\n    const [account, setAccount] = React.useState(null);\r\n    return (\r\n        <AccountVerificationContext.Provider value={[account, setAccount]}>\r\n            {children}\r\n        </AccountVerificationContext.Provider>\r\n    );\r\n};\r\n","import React, {lazy, Suspense} from 'react';\nimport Preloader from \"../Preloader/Preloader\";\n\nconst LazyStepperBase = lazy(() => import('./StepperBase'));\n\nconst StepperBase = props => (\n    <Suspense fallback={<Preloader/>}>\n        <LazyStepperBase {...props} />\n    </Suspense>\n);\n\nexport default StepperBase;\n","import React, {lazy, Suspense} from 'react';\n\nconst LazyAppBarComponent = lazy(() => import('./AppBarComponent'));\n\nconst AppBarComponent = props => (\n    <Suspense fallback={null}>\n        <LazyAppBarComponent {...props} />\n    </Suspense>\n);\n\nexport default AppBarComponent;\n","import React, {lazy, Suspense} from 'react';\nimport Preloader from \"../Preloader/Preloader\";\n\nconst LazySignUpScreen = lazy(() => import('./SignUpScreen'));\n\nconst SignUpScreen = props => (\n    <Suspense fallback={<Preloader/>}>\n        <LazySignUpScreen {...props} />\n    </Suspense>\n);\n\nexport default SignUpScreen;\n","import React, {lazy, Suspense} from 'react';\n\nconst LazySettings = lazy(() => import('./AppComponent'));\n\nconst AppComponent = props => (\n    <Suspense fallback={null}>\n        <LazySettings {...props} />\n    </Suspense>\n);\n\nexport default AppComponent;\n","import React, {lazy, Suspense} from 'react';\n\nconst LazyEmbeddedAccountSystem = lazy(() => import('./EmbeddedAccountSystem'));\n\nconst EmbeddedAccountSystem = props => (\n    <Suspense fallback={null}>\n        <LazyEmbeddedAccountSystem {...props} />\n    </Suspense>\n);\n\nexport default EmbeddedAccountSystem;\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {getQueryParam, MainElement} from \"./functions/Misc/Misc\";\nimport StepperBase from \"./components/StepperBase/StepperBase.lazy\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AppBarComponent from \"./components/AppBarComponent/AppBarComponent.lazy\";\nimport SignUpScreen from \"./components/SignUpScreen/SignUpScreen.lazy\";\nimport {AccountVerificationProvider} from \"./contexts/Contexts\";\nimport {createMuiTheme, ThemeProvider} from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppComponent from \"./components/AppComponent/AppComponent.lazy\";\nimport EmbeddedAccountSystem from \"./components/EmbeddedAccountSystem/EmbeddedAccountSystem.lazy\";\n\n\nconst App = () => {\n\n    const [error, setError] = React.useState(false);\n    const [errorDesc, setErrorDesc] = React.useState(<div>Please Contact Site Owner if Problem Persists.\n        If you are owner of this site Please Add Required Parameters for <code>response_type=token</code></div>);\n    const [darkState, setDarkState] = React.useState(true);\n    const palletType = darkState ? \"dark\" : \"light\";\n    const darkTheme = createMuiTheme({\n        palette: {\n            type: palletType,\n        }\n    });\n    const handleThemeChange = () => {\n        setDarkState(!darkState);\n    };\n    const errorPage = (m = 'Invalid Authentication Parameters', d = errorDesc) => error ? (\n        <div>\n            <Container component=\"main\" className={'pb-2'} maxWidth=\"xs\">\n                <div className={'errorPage text-center'}\n                     style={{\n                         position: 'absolute',\n                         top: '40%',\n                         left: '50%',\n                         width: '90vw',\n                         transform: 'translate(-50%, -50%)'\n                     }}>\n                    <div className={'mb-3 d-inline-flex justify-content-center'}>\n                        <Avatar src={'https://cdn.worldvectorlogo.com/logos/google-domains.svg'}\n                                alt={'Kabeers Network Logo'}/>\n                    </div>\n                    <br/>\n                    <div>\n                        <Typography variant={\"body1\"} className={'mb-3'}>\n                            {m}\n                        </Typography>\n                        <Typography variant={\"caption\"}>\n                            {d}\n                        </Typography>\n                    </div>\n                </div>\n            </Container>\n        </div>\n    ) : null;\n    useEffect(() => {\n        if (getQueryParam('response_type') === 'token' && getQueryParam('client_secret') === null || '' || undefined) return setError(true);\n        if(window.frameElement) {setErrorDesc(<div>Cannot Work When Embedded inside an iframe</div>); setError(true);}\n    }, []);\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <CssBaseline/>\n            <Router>\n                {\n                    errorPage()\n                }\n                <AccountVerificationProvider>\n                    <Route path={['/auth/authorize', /* \"/auth/continue\" */]} component={MainElement.getAttribute(\"embedded\") ? EmbeddedAccountSystem : StepperBase}/>\n                    <Route path={'/create-account'} component={SignUpScreen}/>\n                    <Route exact path={['/home', '/', '/apps', '/profile']}>\n                        <AppBarComponent/>\n                    </Route>\n                    <Route exact path={['/home', '/', '/apps', '/profile', '/settings']}>\n                        <React.Fragment>\n                            <AppComponent/>\n                        </React.Fragment>\n                    </Route>\n                </AccountVerificationProvider>\n            </Router>\n        </ThemeProvider>\n    );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}