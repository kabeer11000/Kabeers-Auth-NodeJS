{
  "version": 3,
  "sources": [
    "functions/Misc/Misc.js",
    "components/Preloader/Preloader.js",
    "api/endPoints.js",
    "functions/Login/AddToAccounts.js",
    "components/StepperBase/StepperBase.lazy.js",
    "components/HomeComponent/HomeComponent.lazy.js",
    "components/AppBarComponent/AppBarComponent.lazy.js",
    "components/OauthAppComponent/OauthAppComponent.lazy.js",
    "components/AccountDataComponent/AccountDataComponent.lazy.js",
    "components/SignUpScreen/SignUpScreen.lazy.js",
    "App.js",
    "functions/Login/Login.js",
    "components/PasswordScreen/PasswordScreen.lazy.js",
    "components/AccountChooser/AccountChooser.lazy.js",
    "serviceWorker.js",
    "index.js"
  ],
  "names": [
    "__webpack_require__",
    "d",
    "__webpack_exports__",
    "getQueryParam",
    "MainElement",
    "getFormData",
    "UpdateQueryStringParam",
    "name",
    "url",
    "window",
    "location",
    "href",
    "replace",
    "results",
    "RegExp",
    "exec",
    "decodeURIComponent",
    "document",
    "getElementById",
    "n",
    "e",
    "o",
    "hasOwnProperty",
    "push",
    "encodeURIComponent",
    "join",
    "uri",
    "key",
    "value",
    "re",
    "separator",
    "indexOf",
    "match",
    "r",
    "react__WEBPACK_IMPORTED_MODULE_0__",
    "react__WEBPACK_IMPORTED_MODULE_0___default",
    "_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_2__",
    "Preloader",
    "a",
    "createElement",
    "className",
    "style",
    "width",
    "height",
    "position",
    "top",
    "left",
    "transform",
    "defaultProps",
    "endPoints",
    "hostName",
    "concat",
    "protocol",
    "host",
    "authAllow",
    "authAllowFake",
    "authToken",
    "chooserLoginTest",
    "getSecretFromHash",
    "getUserApps",
    "removeOauthApp",
    "StartInternalOauthFlow",
    "CreateAccount",
    "VerifyAccount",
    "AddToAccounts",
    "_ref",
    "Object",
    "E_Projects_phpstormprojects_kauth_new_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__",
    "E_Projects_phpstormprojects_kauth_new_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default",
    "mark",
    "_callee",
    "res",
    "data",
    "currentData",
    "wrap",
    "_context",
    "prev",
    "next",
    "abrupt",
    "Error",
    "localStorage",
    "getItem",
    "username",
    "email",
    "password",
    "btoa",
    "account_image",
    "setItem",
    "JSON",
    "stringify",
    "parse",
    "map",
    "account",
    "index",
    "stop",
    "_x",
    "apply",
    "this",
    "arguments",
    "LazyStepperBase",
    "lazy",
    "Promise",
    "all",
    "then",
    "bind",
    "StepperBase",
    "props",
    "react_default",
    "react",
    "fallback",
    "LazyHomeComponent",
    "HomeComponent",
    "LazyAppBarComponent",
    "AppBarComponent",
    "LazyOauthAppComponent",
    "OauthAppComponent",
    "LazyAccountDataComponent",
    "AccountDataComponent",
    "LazySignUpScreen",
    "SignUpScreen",
    "App",
    "_React$useState",
    "React",
    "useState",
    "_React$useState2",
    "slicedToArray",
    "setError",
    "_React$useState3",
    "_React$useState4",
    "useEffect",
    "Fragment",
    "Cookies",
    "get",
    "pathname",
    "react_router",
    "react_router_dom",
    "path",
    "component",
    "exact",
    "includes",
    "Login",
    "E_Projects_phpstormprojects_kauth_new_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__",
    "_callee3",
    "userdata",
    "mainElement",
    "AppData",
    "ajax",
    "getToken",
    "settings",
    "_context3",
    "authCode",
    "getAttribute",
    "clientPublic",
    "_ref2",
    "_args",
    "length",
    "undefined",
    "fetch",
    "E_Projects_phpstormprojects_kauth_new_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__",
    "sent",
    "json",
    "_ref3",
    "_callee2",
    "t",
    "_context2",
    "method",
    "timeout",
    "headers",
    "Content-Type",
    "body",
    "client_secret",
    "client_public",
    "auth_code",
    "Accept",
    "atob",
    "callback",
    "URLSearchParams",
    "split",
    "encodeURI",
    "catch",
    "ChooserLoginTest",
    "_ref4",
    "_callee4",
    "_context4",
    "_x2",
    "_Preloader_Preloader__WEBPACK_IMPORTED_MODULE_1__",
    "LazyPasswordScreen",
    "PasswordScreen",
    "LazyAccountChooser",
    "AccountChooser",
    "isLocalhost",
    "Boolean",
    "hostname",
    "registerValidSW",
    "swUrl",
    "config",
    "navigator",
    "serviceWorker",
    "register",
    "registration",
    "onupdatefound",
    "installingWorker",
    "installing",
    "onstatechange",
    "state",
    "controller",
    "console",
    "log",
    "onUpdate",
    "onSuccess",
    "error",
    "ReactDOM",
    "render",
    "URL",
    "process",
    "origin",
    "addEventListener",
    "Service-Worker",
    "response",
    "contentType",
    "status",
    "ready",
    "unregister",
    "reload",
    "checkValidServiceWorker"
  ],
  "mappings": "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",
  "file": "static/js/main.fb9de49e.chunk.js",
  "sourcesContent": [
    "export const getQueryParam = (name, url) => {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n};\r\nexport const MainElement = document.getElementById('DataContainer');\r\nexport const getFormData = n => {\r\n    let e = [];\r\n    for (let o in n) n.hasOwnProperty(o) && e.push(encodeURIComponent(o) + \"=\" + encodeURIComponent(n[o]));\r\n    return e.join(\"&\")\r\n};\r\n\r\nexport const UpdateQueryStringParam = (uri, key, value) => {\r\n    var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\r\n    var separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\r\n    if (uri.match(re)) {\r\n        return uri.replace(re, '$1' + key + \"=\" + value + '$2');\r\n    } else {\r\n        return uri + separator + key + \"=\" + value;\r\n    }\r\n};\r\n\r\nexport const makeBody = d => Object.keys(d).reduce(function(a,k){a.push(k+'='+encodeURIComponent(d[k]));return a},[]).join('&');\r\n//\"homepage\": \"/auth/authorize\",\r\nfunction serialize( obj ) {\r\n    let str = '?' + Object.keys(obj).reduce(function(a, k){\r\n        a.push(k + '=' + encodeURIComponent(obj[k]));\r\n        return a;\r\n    }, []).join('&');\r\n    return str;\r\n}\r\n",
    "import React from \"react\";\nimport \"./Preloader.css\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Preloader = () => (\n    <div className=\"Preloader text-center\" style={{\n        width: \"10rem\",\n        height: \"10rem\",\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: 'translate(-50%, -50%)'\n    }}>\n        <CircularProgress/>\n    </div>\n);\n\nPreloader.propTypes = {};\n\nPreloader.defaultProps = {};\n\nexport default Preloader;\n",
    "const hostName = `${window.location.protocol}//${window.location.host}`;\r\n//const hostName = `${window.location.protocol}//${window.location.hostname}:3000`;\r\n\r\nexport const endPoints = {\r\n  authAllow: `${hostName}/auth/allow`,\r\n  authAllowFake: `http://hosted-kabeersnetwork.000webhostapp.com/Private/uploads/5f66e9ceceefares.json`,\r\n  authToken: `${hostName}/auth/token`,\r\n  chooserLoginTest: `${hostName}/auth/chooser_login_verification`,\r\n  getSecretFromHash: `${hostName}/auth/implict_grant_unhash_secret`,\r\n  getUserApps: `${hostName}/users/api/generate_apps_perms`,\r\n  removeOauthApp: `${hostName}/user/api/remove_oauth_app`,\r\n  StartInternalOauthFlow: `${hostName}/app/start_oauthFlow`,\r\n  CreateAccount: `${hostName}/auth/user/create-account`,\r\n  VerifyAccount: `${hostName}/auth/user/verify`\r\n};\r\n",
    "export const AddToAccounts = async (res) => {\n    if (!res) return new Error('No Accounts');\n    if (null === localStorage.getItem(\"accounts\")) {\n        const a = [{\n            username: res.username,\n            email: res.email,\n            password: btoa(res.password),\n            account_image: res.account_image\n        }];\n        localStorage.setItem(\"accounts\", JSON.stringify(a))\n    } else {\n        var data = JSON.parse(localStorage.getItem(\"accounts\")), currentData = {\n            username: res.username,\n            email: res.email,\n            password: btoa(res.password),\n            account_image: res.account_image\n        };\n        return data.map((account, index) => account.username === currentData.username) || (data.push({\n            username: res.username,\n            email: res.email,\n            password: btoa(res.password),\n            account_image: res.account_image\n        }), localStorage.setItem(\"accounts\", JSON.stringify(data)))\n    }\n};\n",
    "import React, { lazy, Suspense } from 'react';\nimport Preloader from \"../Preloader/Preloader\";\n\nconst LazyStepperBase = lazy(() => import('./StepperBase'));\n\nconst StepperBase = props => (\n  <Suspense fallback={<Preloader/>}>\n    <LazyStepperBase {...props} />\n  </Suspense>\n);\n\nexport default StepperBase;\n",
    "import React, { lazy, Suspense } from 'react';\n\nconst LazyHomeComponent = lazy(() => import('./HomeComponent'));\n\nconst HomeComponent = props => (\n  <Suspense fallback={null}>\n    <LazyHomeComponent {...props} />\n  </Suspense>\n);\n\nexport default HomeComponent;\n",
    "import React, { lazy, Suspense } from 'react';\n\nconst LazyAppBarComponent = lazy(() => import('./AppBarComponent'));\n\nconst AppBarComponent = props => (\n  <Suspense fallback={null}>\n    <LazyAppBarComponent {...props} />\n  </Suspense>\n);\n\nexport default AppBarComponent;\n",
    "import React, { lazy, Suspense } from 'react';\n\nconst LazyOauthAppComponent = lazy(() => import('./OauthAppComponent'));\n\nconst OauthAppComponent = props => (\n  <Suspense fallback={null}>\n    <LazyOauthAppComponent {...props} />\n  </Suspense>\n);\n\nexport default OauthAppComponent;\n",
    "import React, { lazy, Suspense } from 'react';\n\nconst LazyAccountDataComponent = lazy(() => import('./AccountDataComponent'));\n\nconst AccountDataComponent = props => (\n  <Suspense fallback={null}>\n    <LazyAccountDataComponent {...props} />\n  </Suspense>\n);\n\nexport default AccountDataComponent;\n",
    "import React, { lazy, Suspense } from 'react';\nimport Preloader from \"../Preloader/Preloader\";\n\nconst LazySignUpScreen = lazy(() => import('./SignUpScreen'));\n\nconst SignUpScreen = props => (\n  <Suspense fallback={<Preloader/>}>\n    <LazySignUpScreen {...props} />\n  </Suspense>\n);\n\nexport default SignUpScreen;\n",
    "import React, {useEffect} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {getQueryParam} from \"./functions/Misc/Misc\";\nimport PasswordScreen from \"./components/PasswordScreen/PasswordScreen.lazy\";\nimport AccountChooser from \"./components/AccountChooser/AccountChooser.lazy\";\nimport StepperBase from \"./components/StepperBase/StepperBase.lazy\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Cookies from \"js-cookie\";\nimport {Login} from \"./functions/Login/Login\";\nimport HomeComponent from \"./components/HomeComponent/HomeComponent.lazy\";\nimport AppBarComponent from \"./components/AppBarComponent/AppBarComponent.lazy\";\nimport OauthAppComponent from \"./components/OauthAppComponent/OauthAppComponent.lazy\";\nimport AccountDataComponent from \"./components/AccountDataComponent/AccountDataComponent.lazy\";\nimport {endPoints} from \"./api/endPoints\";\nimport SignUpScreen from \"./components/SignUpScreen/SignUpScreen.lazy\";\n\n\nfunction App() {\n\n    const [error, setError] = React.useState(false);\n    const [errorDesc, setErrorDesc] = React.useState(<div>Please Contact Site Owner if Problem Persists.\n        If you are owner of this site Please Add Required Parameters for <code>response_type=token</code></div>);\n    const errorPage = (m = 'Invalid Authentication Parameters', d = errorDesc) => (\n        <div>\n            <Container component=\"main\" className={'pb-2'} maxWidth=\"xs\">\n                <div className={'errorPage text-center'}\n                     style={{\n                         position: 'absolute',\n                         top: '40%',\n                         left: '50%',\n                         width: '90vw',\n                         transform: 'translate(-50%, -50%)'\n                     }}>\n                    <div className={'mb-3 d-inline-flex justify-content-center'}>\n                        <Avatar src={'https://cdn.worldvectorlogo.com/logos/google-domains.svg'}\n                                alt={'Kabeers Network Logo'}/>\n                    </div>\n                    <br/>\n                    <div>\n                        <Typography variant={\"body1\"} className={'mb-3'}>\n                            {m}\n                        </Typography>\n                        <Typography variant={\"caption\"}>\n                            {d}\n                        </Typography>\n                    </div>\n                </div>\n            </Container>\n        </div>\n    );\n    useEffect(() => {\n        if (getQueryParam('response_type') === 'token' && getQueryParam('client_secret') === null || '' || undefined) return setError(true);\n        return () => {}\n    }, []);\n    const MainApp = (\n        <React.Fragment>\n            {\n                Cookies.get('default_account') && window.location.pathname ? (\n                    <React.Fragment>\n                        <Route path={['/home', '/']} exact component={HomeComponent}/>\n                        <Route path={'/apps'} component={OauthAppComponent}/>\n                        <Route path={'/profile'} component={AccountDataComponent}/>\n                    </React.Fragment>\n                ) : (() => {\n                    window.location.href = endPoints.StartInternalOauthFlow;\n                    return <div/>;\n                })\n            }\n        </React.Fragment>\n    );\n    return (\n        <Router>\n            <Route path={'/auth/authorize'} component={StepperBase}/>\n            <Route path={'/auth/create-account'} component={SignUpScreen}/>\n            <Route exact path={['/home', '/', '/apps', '/profile']} component={AppBarComponent}/>\n            <Route exact path={['/home', '/', '/apps', '/profile']}>\n                <React.Fragment>\n                    {\n                        Cookies.get('default_account') ?\n                            (\n                                <React.Fragment>\n                                    <Route path={['/home', '/']} exact component={HomeComponent}/>\n                                    <Route path={'/apps'} component={OauthAppComponent}/>\n                                    <Route path={'/profile'} component={AccountDataComponent}/>\n                                </React.Fragment>\n                            ) : (['/home', '/', '/apps', '/profile'].includes(window.location.pathname) ? window.location.href = endPoints.StartInternalOauthFlow : null)\n                    }\n                </React.Fragment>\n            </Route>\n        </Router>\n    );\n}\n\n//window.location.href=endPoints.StartInternalOauthFlow;\nexport default App;\n/*\n                    {\n                        Cookies.get('default_account') ? (\n                            <React.Fragment>\n                                <Route path={['/home', '/']} exact component={HomeComponent}/>\n                                <Route path={'/apps'} component={OauthAppComponent}/>\n                                <Route path={'/profile'} component={AccountDataComponent}/>\n                            </React.Fragment>\n                        ) : (window.location.href=endPoints.StartInternalOauthFlow)\n                    }\n\n */\n",
    "import {getFormData, getQueryParam} from \"../Misc/Misc\";\r\nimport {AddToAccounts} from \"./AddToAccounts\";\r\nimport {endPoints} from \"../../api/endPoints\";\r\n\r\nexport const Login = async (userdata) => {\r\n    const mainElement = document.getElementById('DataContainer');\r\n    const AppData = {\r\n        authCode: mainElement.getAttribute('authCode'),\r\n        clientPublic: mainElement.getAttribute('clientPublic'),\r\n    };\r\n    if (!mainElement) return new Error('Main Element Not Defined');\r\n    const ajax = async (a = {}) => {\r\n        return (await fetch(a.url, {...a})).json()\r\n    };\r\n    const getToken = async () => {\r\n        let t = void 0;\r\n        return await ajax({\r\n            url: endPoints.authToken,\r\n            method: \"POST\",\r\n            timeout: 0,\r\n            headers: {\"Content-Type\": \"application/x-www-form-urlencoded\"},\r\n            body: getFormData({\r\n                client_secret: getQueryParam('client_secret'),\r\n                client_public: AppData.clientPublic,\r\n                auth_code: AppData.authCode\r\n            })\r\n        }).then(function (e) {\r\n            t = e\r\n        }), t\r\n    };\r\n    const settings = {\r\n        url: endPoints.authAllow,\r\n        method: \"POST\",\r\n        timeout: 0,\r\n        headers: {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        },\r\n        body: getFormData({\r\n            username: userdata.username,\r\n            password: atob(userdata.password),\r\n            auth_code: AppData.authCode\r\n        })\r\n    };\r\n    return ajax(settings)\r\n        .then((res) => {\r\n            if (res) {\r\n                AddToAccounts(res);\r\n                if (getQueryParam('response_type') === \"code\") window.location.href = res.callback;\r\n                if (getQueryParam('response_type') === \"token\") {\r\n                    const e = new URLSearchParams(res.callback);\r\n                    getToken().then(t => {\r\n                        if (t) return window.location.href = `${res.callback.split(/[?#]/)[0]}?token=${encodeURI(JSON.stringify(t))}&nonce=${e.get(\"nonce\")}&state=${e.get(\"state\")}`;\r\n                    })\r\n                }\r\n            }\r\n        }).catch(e => {\r\n            return new Error('Error Response');\r\n        });\r\n};\r\nexport const ChooserLoginTest = async (account) => {\r\n    return fetch(endPoints.chooserLoginTest, {\r\n        method: \"POST\",\r\n        timeout: 0,\r\n        headers: {'Accept': 'application/json', \"Content-Type\": \"application/x-www-form-urlencoded\"},\r\n        body: getFormData({\r\n            username: account.username,\r\n            password: atob(account.password),\r\n        })\r\n    })\r\n};\r\n",
    "import React, { lazy, Suspense } from 'react';\nimport Preloader from \"../Preloader/Preloader\";\n\nconst LazyPasswordScreen = lazy(() => import('./PasswordScreen'));\n\nconst PasswordScreen = props => (\n  <Suspense fallback={<Preloader/>}>\n    <LazyPasswordScreen {...props} />\n  </Suspense>\n);\n\nexport default PasswordScreen;\n",
    "import React, { lazy, Suspense } from 'react';\nimport Preloader from \"../Preloader/Preloader\";\n\nconst LazyAccountChooser = lazy(() => import('./AccountChooser'));\n\nconst AccountChooser = props => (\n  <Suspense fallback={<Preloader/>}>\n    <LazyAccountChooser {...props} />\n  </Suspense>\n);\n\nexport default AccountChooser;\n",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"
  ],
  "sourceRoot": ""
}
