<title>Continue to {{app_name}}</title>
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"/>
<link rel="shortcut icon" type="image/png" href="favicon.png"/>
<link rel="shortcut icon" type="image/png" href="ic_launcher.png"/>
<link href="/stylesheets/bootstrap_matrial_design.css" rel="stylesheet" id="bootstrap-css">

<header class="mdc-top-app-bar mt-0 fixed-top" style="margin:0!important;padding:0;background-color:transparent">
    <div class="mdc-top-app-bar__row">
        <section class="mdc-top-app-bar__section mdc-top-app-bar__section--align-start">
            <button onclick="window.history.back()"
                    class="material-icons mdc-top-app-bar__navigation-icon mdc-icon-button" aria-label="Close"><img
                    src="https://cdn.iconscout.com/icon/free/png-512/back-arrow-1767531-1502435.png"
                    style="height: 1.5rem;width: auto;opacity: 70%"/></button>
            <span class="mdc-top-app-bar__title"></span>
        </section>
        <section class="mdc-top-app-bar__section mdc-top-app-bar__section--align-end" role="toolbar">
        </section>
    </div>
</header>
<div id="container mt-5">
    <div class="container-fluid mt-5 2bootstrap snippet" style="justify-content: center; align-items: center;">
        <div class="row">
            <div class="col-md-12">
                <div class="account-wall_  shadow-none border accountchooser card">
                    <h1 class="title text-center">
                        <div class="col-md d-flex justify-content-center my-2">
                            <div style="width: 2em;">
                                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
                                     style="width: 2em;" viewBox="0 0 1528 1528">
                                    <defs>
                                        <linearGradient id="a" x1="0.611" y1="0.882" x2="0.291" y2="0.158"
                                                        gradientUnits="objectBoundingBox">
                                            <stop offset="0" stop-color="#4e5aa0"/>
                                            <stop offset="1" stop-color="#4c5da9"/>
                                        </linearGradient>
                                        <linearGradient id="b" x1="0.5" x2="0.5" y2="1"
                                                        gradientUnits="objectBoundingBox">
                                            <stop offset="0" stop-color="#6b91c8"/>
                                            <stop offset="1" stop-color="#618ac3"/>
                                        </linearGradient>
                                        <linearGradient id="c" x1="0.5" y1="1" x2="0.5"
                                                        gradientUnits="objectBoundingBox">
                                            <stop offset="0" stop-color="#6fc69d"/>
                                            <stop offset="1" stop-color="#66c296"/>
                                        </linearGradient>
                                    </defs>
                                    <g transform="translate(-20.5 -20.5)">
                                        <path d="M784.5,1548V21C362.83,21,21,362.83,21,784.5S362.83,1548,784.5,1548Z"
                                              fill="#d3e1f2" stroke="#fff" stroke-width="1" fill-rule="evenodd"/>
                                        <path d="M256,1548V21c421.67,0,763.5,341.83,763.5,763.5S677.67,1548,256,1548Z"
                                              transform="translate(528.5)" fill="#5364ae" stroke="#fff" stroke-width="1"
                                              fill-rule="evenodd"/>
                                        <path
                                                d="M756.391,0l-147,1453.093L.669,795.781Q0,779.634,0,763.468C0,344.17,338,3.818,756.391,0Z"
                                                transform="translate(1548 1547.968) rotate(180)"
                                                stroke="#fff"
                                                stroke-width="1"
                                                fill-rule="evenodd"
                                                fill="url(#a)"
                                        />
                                        <path d="M534.868,1548V21C312.371,21,132,362.83,132,784.5S312.371,1548,534.868,1548Z"
                                              transform="translate(249.632)" stroke="#fff" stroke-width="1"
                                              fill-rule="evenodd" fill="url(#b)"/>
                                        <path d="M402.868,0V1527C180.371,1527,0,1185.17,0,763.5S180.371,0,402.868,0Z"
                                              transform="translate(1187.368 1548) rotate(180)" stroke="#fff"
                                              stroke-width="1" fill-rule="evenodd" fill="url(#c)"/>
                                    </g>
                                </svg>
                            </div>
                        </div>
                        Choose an account<br/>
                        {{#if noPrompt}}
                            <br/>
                            <small class="text-muted">Continue to {{app_name}}<br/>
                                {{app_name}} will recieve</small>
                            <div id="accordion" class="mt-3 accordion border-top">
                                {{{grants}}}
                            </div>
                        {{/if}}
                    </h1>
                    <div class="alert alert-danger d-none" role="alert"></div>
                    <br/>
                    <ul class="accounts main list-group1">
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
<BackendContainer onchange="this.forms[0].submit()" class="d-none"></BackendContainer>
<br/>
<br/>
<div class="d-inline-block text-muted small mx-3 fixed-bottom" style="bottom:0">
    <a href="#" class="mx-1 text-muted">Terms</a>
    <a href="#" class="mx-1 text-muted">Privacy</a>
    <a href="#" class="mx-1 text-muted">Help</a>
</div>
<style type="text/css">
    .mdc-icon-button {
        display: inline-block;
        position: relative;
        box-sizing: border-box;
        border: 0;
        outline: 0;
        background-color: transparent;
        fill: currentColor;
        color: inherit;
        font-size: 24px;
        text-decoration: none;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        width: 48px;
        height: 48px;
        padding: 12px
    }

    .mdc-list-item {
        height: 48px
    }

    .mdc-list-item {
        display: flex;
        position: relative;
        align-items: center;
        justify-content: flex-start;
        overflow: hidden;
        padding: 0;
        padding-left: 16px;
        padding-right: 16px;
        height: 48px
    }

    .mdc-list-item__text {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden
    }

    .mdc-list-item__primary-text {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        display: block;
        margin-top: 0;
        line-height: normal;
        margin-bottom: -20px
    }

    .mdc-list-item__primary-text::before {
        display: inline-block;
        width: 0;
        height: 28px;
        content: "";
        vertical-align: 0
    }

    .mdc-list-item__primary-text::after {
        display: inline-block;
        width: 0;
        height: 20px;
        content: "";
        vertical-align: -20px
    }

    :not(.mdc-list-item--disabled).mdc-list-item {
        cursor: pointer
    }

    :not(.mdc-list-item--disabled).mdc-list-item {
        --mdc-ripple-fg-size: 0;
        --mdc-ripple-left: 0;
        --mdc-ripple-top: 0;
        --mdc-ripple-fg-scale: 1;
        --mdc-ripple-fg-translate-end: 0;
        --mdc-ripple-fg-translate-start: 0;
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0)
    }

    :not(.mdc-list-item--disabled).mdc-list-item .mdc-list-item__ripple::before, :not(.mdc-list-item--disabled).mdc-list-item .mdc-list-item__ripple::after {
        position: absolute;
        border-radius: 50%;
        opacity: 0;
        pointer-events: none;
        content: ""
    }

    :not(.mdc-list-item--disabled).mdc-list-item .mdc-list-item__ripple::before {
        transition: opacity 15ms linear, background-color 15ms linear;
        z-index: 1
    }

    :not(.mdc-list-item--disabled).mdc-list-item .mdc-list-item__ripple::before, :not(.mdc-list-item--disabled).mdc-list-item .mdc-list-item__ripple::after {
        top: calc(50% - 100%);
        left: calc(50% - 100%);
        width: 200%;
        height: 200%
    }

    :not(.mdc-list-item--disabled).mdc-list-item .mdc-list-item__ripple::before, :not(.mdc-list-item--disabled).mdc-list-item .mdc-list-item__ripple::after {
        background-color: #000
    }

    .mdc-top-app-bar {
        background-color: #6200ee;
        background-color: var(--mdc-theme-primary, #6200ee);
        color: #fff;
        display: flex;
        position: fixed;
        flex-direction: column;
        justify-content: space-between;
        box-sizing: border-box;
        width: 100%;
        z-index: 4
    }

    .mdc-top-app-bar .mdc-top-app-bar__action-item, .mdc-top-app-bar .mdc-top-app-bar__navigation-icon {
        color: #fff;
        color: var(--mdc-theme-on-primary, #fff)
    }

    .mdc-top-app-bar .mdc-top-app-bar__action-item::before, .mdc-top-app-bar .mdc-top-app-bar__action-item::after, .mdc-top-app-bar .mdc-top-app-bar__navigation-icon::before, .mdc-top-app-bar .mdc-top-app-bar__navigation-icon::after {
        background-color: #fff;
        background-color: var(--mdc-theme-on-primary, #fff)
    }

    .mdc-top-app-bar .mdc-top-app-bar__action-item:hover::before, .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:hover::before {
        opacity: .08
    }

    .mdc-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded--background-focused::before, .mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):focus::before, .mdc-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--background-focused::before, .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):focus::before {
        transition-duration: 75ms;
        opacity: .24
    }

    .mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded)::after, .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded)::after {
        transition: opacity 150ms linear
    }

    .mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):active::after, .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):active::after {
        transition-duration: 75ms;
        opacity: .24
    }

    .mdc-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded, .mdc-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded {
        --mdc-ripple-fg-opacity: .24
    }

    .mdc-top-app-bar__row {
        display: flex;
        position: relative;
        box-sizing: border-box;
        width: 100%;
        height: 64px
    }

    .mdc-top-app-bar__section {
        display: inline-flex;
        flex: 1 1 auto;
        align-items: center;
        min-width: 0;
        padding: 8px 12px;
        z-index: 1
    }

    .mdc-top-app-bar__section--align-start {
        justify-content: flex-start;
        order: -1
    }

    .mdc-top-app-bar__section--align-end {
        justify-content: flex-end;
        order: 1
    }

    .mdc-top-app-bar__title {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        font-size: 1.25rem;
        line-height: 2rem;
        font-weight: 500;
        text-decoration: inherit;
        padding-left: 20px;
        padding-right: 0;
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        z-index: 1
    }

    [dir=rtl] .mdc-top-app-bar__title, .mdc-top-app-bar__title[dir=rtl] {
        padding-left: 0;
        padding-right: 20px
    }

    .mdc-top-app-bar--short-collapsed {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
        border-bottom-right-radius: 24px;
        border-bottom-left-radius: 0
    }

    [dir=rtl] .mdc-top-app-bar--short-collapsed, .mdc-top-app-bar--short-collapsed[dir=rtl] {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 24px
    }

    .mdc-top-app-bar--short {
        top: 0;
        right: auto;
        left: 0;
        width: 100%;
        transition: width 250ms cubic-bezier(0.4, 0, 0.2, 1)
    }

    [dir=rtl] .mdc-top-app-bar--short, .mdc-top-app-bar--short[dir=rtl] {
        right: 0;
        left: auto
    }

    .mdc-top-app-bar--short .mdc-top-app-bar__row {
        height: 56px
    }

    .mdc-top-app-bar--short .mdc-top-app-bar__section {
        padding: 4px
    }

    .mdc-top-app-bar--short .mdc-top-app-bar__title {
        transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1);
        opacity: 1
    }

    .mdc-top-app-bar--short-collapsed {
        box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0 rgba(0, 0, 0, 0.14), 0px 1px 10px 0 rgba(0, 0, 0, .12);
        width: 56px;
        transition: width 300ms cubic-bezier(0.4, 0, 0.2, 1)
    }

    .mdc-top-app-bar--short-collapsed .mdc-top-app-bar__title {
        display: none
    }

    .mdc-top-app-bar--short-collapsed .mdc-top-app-bar__action-item {
        transition: padding 150ms cubic-bezier(0.4, 0, 0.2, 1)
    }

    .mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item {
        width: 112px
    }

    .mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item .mdc-top-app-bar__section--align-end {
        padding-left: 0;
        padding-right: 12px
    }

    [dir=rtl] .mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item .mdc-top-app-bar__section--align-end, .mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item .mdc-top-app-bar__section--align-end[dir=rtl] {
        padding-left: 12px;
        padding-right: 0
    }

    .mdc-top-app-bar--dense .mdc-top-app-bar__row {
        height: 48px
    }

    .mdc-top-app-bar--dense .mdc-top-app-bar__section {
        padding: 0 4px
    }

    .mdc-top-app-bar--dense .mdc-top-app-bar__title {
        padding-left: 12px;
        padding-right: 0
    }

    [dir=rtl] .mdc-top-app-bar--dense .mdc-top-app-bar__title, .mdc-top-app-bar--dense .mdc-top-app-bar__title[dir=rtl] {
        padding-left: 0;
        padding-right: 12px
    }

    .mdc-top-app-bar--prominent .mdc-top-app-bar__row {
        height: 128px
    }

    .mdc-top-app-bar--prominent .mdc-top-app-bar__title {
        align-self: flex-end;
        padding-bottom: 2px
    }

    .mdc-top-app-bar--prominent .mdc-top-app-bar__action-item, .mdc-top-app-bar--prominent .mdc-top-app-bar__navigation-icon {
        align-self: flex-start
    }

    .mdc-top-app-bar--dense.mdc-top-app-bar--prominent .mdc-top-app-bar__row {
        height: 96px
    }

    .mdc-top-app-bar--dense.mdc-top-app-bar--prominent .mdc-top-app-bar__section {
        padding: 0 12px
    }

    .mdc-top-app-bar--dense.mdc-top-app-bar--prominent .mdc-top-app-bar__title {
        padding-left: 20px;
        padding-right: 0;
        padding-bottom: 9px
    }

    [dir=rtl] .mdc-top-app-bar--dense.mdc-top-app-bar--prominent .mdc-top-app-bar__title, .mdc-top-app-bar--dense.mdc-top-app-bar--prominent .mdc-top-app-bar__title[dir=rtl] {
        padding-left: 0;
        padding-right: 20px
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box
    }

    .w-0 {
        width: 0 !important;
        display: none
    }

    .snippet {
        transition-duration: .75s
    }

    @media (min-width: 600px) {
        .snippet {
            width: 40%;
            margin-top: 5%
        }
    }

    .accountFF:hover {
        background-color: #fafafa
    }

    .accountFF:active {
        background-color: #f1f1f1
    }

    .main form button {
        margin-top: 0 !important;
        margin-bottom: 0 !important;
        padding-top: 0 !important;
        padding-bottom: 0 !important
    }

    .main {
        align-items: center
    }

    .main form hr {
        margin: 0
    }

    .form-signin {
        max-width: 330px;
        padding: 15px;
        margin: 0 auto;
        padding-top: 5px
    }

    .account-wall {
        margin-top: 20px;
        padding: 20px 25px 30px;
        background-color: #fff;
        -moz-box-shadow: none;
        -webkit-box-shadow: none;
        box-shadow: none;
        border-style: solid;
        border-width: 1px;
        border-color: rgba(0, 0, 0, 0.1);
        border-radius: 5px
    }

    .logo {
        margin: 25px auto 20px;
        float: none;
        display: block;
        height: 38px;
        width: 116px
    }

    .title {
        font-size: 20px;
        color: #262626;
        margin: 0 0 15px;
        font-weight: normal
    }

    .accountchooser .accounts {
        width: 100%;
        margin: 0;
        list-style: none;
        padding: 0
    }

    .accountchooser .accounts li {
        height: 76px
    }

    .accountchooser .accounts li button {
        padding: 15px 0;
        display: block;
        width: 100%;
        height: 100%;
        outline: 0;
        border: 0;
        cursor: pointer;
        text-align: left;
        background-size: 21px 21px
    }

    .accountchooser .accounts li button div div img {
        float: left;
        -moz-border-radius: 50%;
        -webkit-border-radius: 50%;
        border-radius: 50%;
        height: 46px;
        width: 2.5rem
    }

    .accountchooser .accounts li button span.account-name {
        font-weight: bold;
        font-size: 16px;
        padding-top: 3px;
        color: #427fed
    }

    .accountchooser .accounts li button span {
        display: block;
        margin-left: 58px;
        padding-right: 20px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis
    }

    .action {
        padding: 5px
    }

    .action ul {
        width: 100%;
        margin: 0;
        list-style: none;
        padding: 0
    }

    .action ul li:first-child {
        border-right: 1px solid #d5d5d5
    }

    .action ul li {
        width: 49%;
        display: inline-block
    }

    .action ul li a {
        color: #427fed;
        cursor: pointer;
        text-decoration: none;
        -moz-box-sizing: border-box;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        width: 100%;
        display: inline-block;
        background: 0;
        text-align: center;
        padding: 12px 0;
        outline: 0;
        text-decoration: none;
        border: 0
    }

    .image-container {
        text-align: center;
        vertical-align: middle;
        display: table-cell
    }

    .img-cp {
        display: table
    }

    .card {
        width: 100%
    }

    #container {
        min-height: 80vh !important
    }

    @media screen and (max-width: 600px) {
        .accountFF {
            padding-left: 0 !important;
            padding-right: 0 !important
        }

        .card {
            box-shadow: none !important;
            border: none !important;
            background: #fafafa
        }

        #container {
            min-height: 70vh !important
        }
    }

    @media screen and (max-width: 700px) {
        .snippet {
            width: 100% !important
        }
    }
</style>
<script>
    async function login(username, password) {
        const accounts = async (res) => {
            if (null === localStorage.getItem("accounts")) {
                const a = [{
                    username: res.user_data.username,
                    email: res.user_data.email,
                    password: btoa(res.user_data.password),
                    account_image: res.user_data.account_image
                }];
                localStorage.setItem("accounts", JSON.stringify(a))
            } else {
                var data = JSON.parse(localStorage.getItem("accounts")), currentData = {
                    username: res.user_data.username,
                    email: res.user_data.email,
                    password: btoa(res.user_data.password),
                    account_image: res.user_data.account_image
                };
                JSON.stringify(data).includes(JSON.stringify(currentData)) || (data.push({
                    username: res.user_data.username,
                    email: res.user_data.email,
                    password: btoa(res.user_data.password),
                    account_image: res.user_data.account_image
                }), localStorage.setItem("accounts", JSON.stringify(data)))
            }
        };
        const ajax = async (a = {}) => {
            return (await fetch(a.url, {...a})).json()
        };
        const getFormData = n => {
            let e = [];
            for (let o in n) n.hasOwnProperty(o) && e.push(encodeURIComponent(o) + "=" + encodeURIComponent(n[o]));
            return e.join("&")
        };
        const getToken = async () => {
            let t = void 0;
            return await ajax({
                url: "/auth/token",
                method: "POST",
                timeout: 0,
                headers: {"Content-Type": "application/x-www-form-urlencoded"},
                body: getFormData({
                    client_secret: "{{client_secret}}",
                    client_public: "{{client_public}}",
                    auth_code: "{{code}}"
                })
            }).then(function (e) {
                t = e
            }), t
        };
        const settings = {
            url: "/auth/allow",
            method: "POST",
            timeout: 0,
            headers: {"Content-Type": "application/x-www-form-urlencoded"},
            body: getFormData({username: username, password: atob(password), auth_code: "{{code}}"})
        };
        ajax(settings).then((res) => {
            if (res) {
                accounts(res);
                "code" === '{{response_type}}' && (window.location.href = res.callback);
                if ("token" === '{{response_type}}') {
                    const e = new URLSearchParams(res.callback);
                    getToken().then(t => {
                        t && (window.location.href = `${res.callback.split(/[?#]/)[0]}?token=${encodeURI(JSON.stringify(t))}&nonce=${e.get("nonce")}&state=${e.get("state")}`)
                    })
                }
            }
        });
    }

    (async function () {
        if (null != localStorage.getItem("accounts")) {
            let a = JSON.parse(localStorage.getItem("accounts")), html = '';
            for (let e = a.length - 1; e >= 0; e--) {
                html += ` <li class="accountFF px-3"><div><input name="username" value="${a[e].username}" class="w-0" /><input name="password" value="${a[e].password}" class="w-0" /><button onclick="login('${a[e].username}','${a[e].password}')" name="login_user" class="list-group-item px-2"><div class="img-cp position-absolute mt-0"><div class="image-container"><img class="account-image" style="width:2rem;height:2rem" alt="Account Image" src="${a[e].account_image}" /></div></div><span class="account-name">${a[e].username}</span><span class="account-email text-muted">${a[e].email} </span></button></div></li>`;
            }
            document.querySelector('.main').innerHTML = html;
        } else window.history.back();
    })();
</script>
